// @messageformat/core@3.4.0 downloaded from https://ga.jspm.io/npm:@messageformat/core@3.4.0/messageformat.js

var t=typeof globalThis!=="undefined"?globalThis:typeof self!=="undefined"?self:global;var n={};(function(t,r){n=r()})(0,(function(){var __assign=function(){__assign=Object.assign||function __assign(t){for(var n,r=1,o=arguments.length;r<o;r++){n=arguments[r];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(t[s]=n[s])}return t};return __assign.apply(this||t,arguments)};function __values(t){var n=typeof Symbol==="function"&&Symbol.iterator,r=n&&t[n],o=0;if(r)return r.call(t);if(t&&typeof t.length==="number")return{next:function(){t&&o>=t.length&&(t=void 0);return{value:t&&t[o++],done:!t}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")}function __read(t,n){var r=typeof Symbol==="function"&&t[Symbol.iterator];if(!r)return t;var o,s,i=r.call(t),l=[];try{while((n===void 0||n-- >0)&&!(o=i.next()).done)l.push(o.value)}catch(t){s={error:t}}finally{try{o&&!o.done&&(r=i.return)&&r.call(i)}finally{if(s)throw s.error}}return l}function __spreadArray(t,n,r){if(r||arguments.length===2)for(var o,s=0,i=n.length;s<i;s++)if(o||!(s in n)){o||(o=Array.prototype.slice.call(n,0,s));o[s]=n[s]}return t.concat(o||Array.prototype.slice.call(n))}typeof SuppressedError==="function"?SuppressedError:function(t,n,r){var o=new Error(r);return o.name="SuppressedError",o.error=t,o.suppressed=n,o};class DateFormatError extends Error{constructor(t,n,r){super(t);this.token=n;this.type=r||"error"}}const alpha=t=>t<4?"short":t===4?"long":"narrow";const numeric=t=>t%2===0?"2-digit":"numeric";function yearOptions(t,n){switch(t.char){case"y":return{year:numeric(t.width)};case"r":return{calendar:"gregory",year:"numeric"};case"u":case"U":case"Y":default:n(`${t.desc} is not supported; falling back to year:numeric`,DateFormatError.WARNING);return{year:"numeric"}}}function monthStyle(t,n){switch(t.width){case 1:return"numeric";case 2:return"2-digit";case 3:return"short";case 4:return"long";case 5:return"narrow";default:n(`${t.desc} is not supported with width ${t.width}`);return}}function dayStyle(t,n){const{char:r,desc:o,width:s}=t;if(r==="d")return numeric(s);n(`${o} is not supported`)}function weekdayStyle(t,n){const{char:r,desc:o,width:s}=t;if((r==="c"||r==="e")&&s<3){const t=`Numeric value is not supported for ${o}; falling back to weekday:short`;n(t,DateFormatError.WARNING)}return alpha(s)}function hourOptions(t){const n=numeric(t.width);let r;switch(t.char){case"h":r="h12";break;case"H":r="h23";break;case"k":r="h24";break;case"K":r="h11";break}return r?{hour:n,hourCycle:r}:{hour:n}}function timeZoneNameStyle(t,n){const{char:r,desc:o,width:s}=t;switch(r){case"v":case"z":return s===4?"long":"short";case"V":if(s===4)return"long";n(`${o} is not supported with width ${s}`);return;case"X":n(`${o} is not supported`);return}return"short"}function compileOptions(t,n){switch(t.field){case"era":return{era:alpha(t.width)};case"year":return yearOptions(t,n);case"month":return{month:monthStyle(t,n)};case"day":return{day:dayStyle(t,n)};case"weekday":return{weekday:weekdayStyle(t,n)};case"period":return;case"hour":return hourOptions(t);case"min":return{minute:numeric(t.width)};case"sec":return{second:numeric(t.width)};case"tz":return{timeZoneName:timeZoneNameStyle(t,n)};case"quarter":case"week":case"sec-frac":case"ms":n(`${t.desc} is not supported`)}}function getDateFormatOptions(t,n){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:t=>{throw t};const o={timeZone:n};const s=[];for(const n of t){const{error:t,field:i,str:l}=n;if(t){const o=new DateFormatError(t.message,n);o.stack=t.stack;r(o)}if(l){const t=`Ignoring string part: ${l}`;r(new DateFormatError(t,n,DateFormatError.WARNING))}i&&(s.indexOf(i)===-1?s.push(i):r(new DateFormatError(`Duplicate ${i} token`,n)));const u=compileOptions(n,((t,o)=>r(new DateFormatError(t,n,o))));u&&Object.assign(o,u)}return o}const n={G:{field:"era",desc:"Era"},y:{field:"year",desc:"Year"},Y:{field:"year",desc:'Year of "Week of Year"'},u:{field:"year",desc:"Extended year"},U:{field:"year",desc:"Cyclic year name"},r:{field:"year",desc:"Related Gregorian year"},Q:{field:"quarter",desc:"Quarter"},q:{field:"quarter",desc:"Stand-alone quarter"},M:{field:"month",desc:"Month in year"},L:{field:"month",desc:"Stand-alone month in year"},w:{field:"week",desc:"Week of year"},W:{field:"week",desc:"Week of month"},d:{field:"day",desc:"Day in month"},D:{field:"day",desc:"Day of year"},F:{field:"day",desc:"Day of week in month"},g:{field:"day",desc:"Modified julian day"},E:{field:"weekday",desc:"Day of week"},e:{field:"weekday",desc:"Local day of week"},c:{field:"weekday",desc:"Stand-alone local day of week"},a:{field:"period",desc:"AM/PM marker"},b:{field:"period",desc:"AM/PM/noon/midnight marker"},B:{field:"period",desc:"Flexible day period"},h:{field:"hour",desc:"Hour in AM/PM (1~12)"},H:{field:"hour",desc:"Hour in day (0~23)"},k:{field:"hour",desc:"Hour in day (1~24)"},K:{field:"hour",desc:"Hour in AM/PM (0~11)"},j:{field:"hour",desc:"Hour in preferred cycle"},J:{field:"hour",desc:"Hour in preferred cycle without marker"},C:{field:"hour",desc:"Hour in preferred cycle with flexible marker"},m:{field:"min",desc:"Minute in hour"},s:{field:"sec",desc:"Second in minute"},S:{field:"sec-frac",desc:"Fractional second"},A:{field:"ms",desc:"Milliseconds in day"},z:{field:"tz",desc:"Time Zone: specific non-location"},Z:{field:"tz",desc:"Time Zone"},O:{field:"tz",desc:"Time Zone: localized"},v:{field:"tz",desc:"Time Zone: generic non-location"},V:{field:"tz",desc:"Time Zone: ID"},X:{field:"tz",desc:"Time Zone: ISO8601 with Z"},x:{field:"tz",desc:"Time Zone: ISO8601"}};const isLetter=t=>t>="A"&&t<="Z"||t>="a"&&t<="z";function readFieldToken(t,r){const o=t[r];let s=1;while(t[++r]===o)++s;const i=n[o];if(!i){const t=`The letter ${o} is not a valid field identifier`;return{char:o,error:new Error(t),width:s}}return{char:o,field:i.field,desc:i.desc,width:s}}function readQuotedToken(t,n){let r=t[++n];let o=2;if(r==="'")return{char:"'",str:r,width:o};while(true){const s=t[++n];++o;if(s===void 0){const n=`Unterminated quoted literal in pattern: ${r||t}`;return{char:"'",error:new Error(n),str:r,width:o}}if(s==="'"){if(t[++n]!=="'")return{char:"'",str:r,width:o};++o}r+=s}}function readToken(t,n){const r=t[n];if(!r)return null;if(isLetter(r))return readFieldToken(t,n);if(r==="'")return readQuotedToken(t,n);let o=r;let s=1;while(true){const i=t[++n];if(!i||isLetter(i)||i==="'")return{char:r,str:o,width:s};o+=i;s+=1}}
/**
   * Parse an {@link http://userguide.icu-project.org/formatparse/datetime | ICU
   * DateFormat skeleton} string into a {@link DateToken} array.
   *
   * @remarks
   * Errors will not be thrown, but if encountered are included as the relevant
   * token's `error` value.
   *
   * @public
   * @param src - The skeleton string
   *
   * @example
   * ```js
   * import { parseDateTokens } from '@messageformat/date-skeleton'
   *
   * parseDateTokens('GrMMMdd', console.error)
   * // [
   * //   { char: 'G', field: 'era', desc: 'Era', width: 1 },
   * //   { char: 'r', field: 'year', desc: 'Related Gregorian year', width: 1 },
   * //   { char: 'M', field: 'month', desc: 'Month in year', width: 3 },
   * //   { char: 'd', field: 'day', desc: 'Day in month', width: 2 }
   * // ]
   * ```
   */function parseDateTokens(t){const n=[];let r=0;while(true){const o=readToken(t,r);if(!o)return n;n.push(o);r+=o.width}}
/**
   * Returns a date formatter function for the given locales and date skeleton
   *
   * @remarks
   * Uses `Intl.DateTimeFormat` internally.
   *
   * @public
   * @param locales - One or more valid BCP 47 language tags, e.g. `fr` or `en-CA`
   * @param tokens - An ICU DateFormat skeleton string, or an array or parsed
   *   `DateToken` tokens
   * @param onError - If defined, will be called separately for each encountered
   *   parsing error and unsupported feature.
   * @example
   * ```js
   * import { getDateFormatter } from '@messageformat/date-skeleton'
   *
   * // 2006 Jan 2, 15:04:05.789 in local time
   * const date = new Date(2006, 0, 2, 15, 4, 5, 789)
   *
   * let fmt = getDateFormatter('en-CA', 'GrMMMdd', console.error)
   * fmt(date) // 'Jan. 02, 2006 AD'
   *
   * fmt = getDateFormatter('en-CA', 'hamszzzz', console.error)
   * fmt(date) // '3:04:05 p.m. Newfoundland Daylight Time'
   * ```
   */function getDateFormatter(t,n,r,o){typeof n==="string"&&(n=parseDateTokens(n));if(typeof r==="function"){o=r;r=void 0}const s=getDateFormatOptions(n,r,o);const i=new Intl.DateTimeFormat(t,s);return t=>i.format(t)}
/**
   * Returns a string of JavaScript source that evaluates to a date formatter
   * function with the same `(date: Date | number) => string` signature as the
   * function returned by {@link getDateFormatter}.
   *
   * @remarks
   * The returned function will memoize an `Intl.DateTimeFormat` instance.
   *
   * @public
   * @param locales - One or more valid BCP 47 language tags, e.g. `fr` or `en-CA`
   * @param tokens - An ICU DateFormat skeleton string, or an array or parsed
   *   `DateToken` tokens
   * @param onError - If defined, will be called separately for each encountered
   *   parsing error and unsupported feature.
   * @example
   * ```js
   * import { getDateFormatterSource } from '@messageformat/date-skeleton'
   *
   * getDateFormatterSource('en-CA', 'GrMMMdd', console.error)
   * // '(function() {\n' +
   * // '  var opt = {"era":"short","calendar":"gregory","year":"numeric",' +
   * //      '"month":"short","day":"2-digit"};\n' +
   * // '  var dtf = new Intl.DateTimeFormat("en-CA", opt);\n' +
   * // '  return function(value) { return dtf.format(value); }\n' +
   * // '})()'
   *
   * const src = getDateFormatterSource('en-CA', 'hamszzzz', console.error)
   * // '(function() {\n' +
   * // '  var opt = {"hour":"numeric","hourCycle":"h12","minute":"numeric",' +
   * //      '"second":"numeric","timeZoneName":"long"};\n' +
   * // '  var dtf = new Intl.DateTimeFormat("en-CA", opt);\n' +
   * // '  return function(value) { return dtf.format(value); }\n' +
   * // '})()'
   *
   * const fmt = new Function(`return ${src}`)()
   * const date = new Date(2006, 0, 2, 15, 4, 5, 789)
   * fmt(date) // '3:04:05 p.m. Newfoundland Daylight Time'
   * ```
   */function getDateFormatterSource(t,n,r,o){typeof n==="string"&&(n=parseDateTokens(n));if(typeof r==="function"){o=r;r=void 0}const s=getDateFormatOptions(n,r,o);const i=["(function() {",`var opt = ${JSON.stringify(s)};`,`var dtf = new Intl.DateTimeFormat(${JSON.stringify(t)}, opt);`,"return function(value) { return dtf.format(value); }"];return i.join("\n  ")+"\n})()"}class NumberFormatError extends Error{constructor(t,n){super(n);this.code=t}}class BadOptionError extends NumberFormatError{constructor(t,n){super("BAD_OPTION",`Unknown ${t} option: ${n}`);this.stem=t;this.option=n}}class BadStemError extends NumberFormatError{constructor(t){super("BAD_STEM",`Unknown stem: ${t}`);this.stem=t}}class MaskedValueError extends NumberFormatError{constructor(t,n){super("MASKED_VALUE",`Value for ${t} is set multiple times`);this.type=t;this.prev=n}}class MissingOptionError extends NumberFormatError{constructor(t){super("MISSING_OPTION",`Required option missing for ${t}`);this.stem=t}}class PatternError extends NumberFormatError{constructor(t,n){super("BAD_PATTERN",n);this.char=t}}class TooManyOptionsError extends NumberFormatError{constructor(t,n,r){const o=r>1?`${r} options`:"one option";super("TOO_MANY_OPTIONS",`Token ${t} only supports ${o} (got ${n.length})`);this.stem=t;this.options=n}}class UnsupportedError extends NumberFormatError{constructor(t,n){super("UNSUPPORTED",`The stem ${t} is not supported`);this.stem=t;if(n){this.message+=` with value ${n}`;this.source=n}}}function getNumberFormatLocales(t,n){let{numberingSystem:r}=n;Array.isArray(t)||(t=[t]);return r?t.map((t=>{const n=t.indexOf("-u-")===-1?"u-nu":"nu";return`${t}-${n}-${r}`})).concat(t):t}function round(t,n){const r=+t+n/2;return r-r%+n}function getNumberFormatMultiplier(t){let{scale:n,unit:r}=t;let o=typeof n==="number"&&n>=0?n:1;r&&r.style==="percent"&&(o*=.01);return o}function getNumberFormatModifier(t){const n=getNumberFormatMultiplier(t);const{precision:r}=t;return r&&r.style==="precision-increment"?t=>round(t,r.increment)*n:t=>t*n}function getNumberFormatModifierSource(t){const n=getNumberFormatMultiplier(t);const{precision:r}=t;if(r&&r.style==="precision-increment"){const t="+n + "+r.increment/2;let o=`x - (x % +${r.increment})`;n!==1&&(o=`(${o}) * ${n}`);return`function(n) { var x = ${t}; return ${o}; }`}return n!==1?`function(n) { return n * ${n}; }`:null}
/**
   * Given an input ICU NumberFormatter skeleton, does its best to construct a
   * corresponding `Intl.NumberFormat` options structure.
   *
   * @remarks
   * Some features depend on `Intl.NumberFormat` features defined in ES2020.
   *
   * @internal
   * @param onUnsupported - If defined, called when encountering unsupported (but
   *   valid) tokens, such as `decimal-always` or `permille`. The error `source`
   *   may specify the source of an unsupported option.
   *
   * @example
   * ```js
   * import {
   *   getNumberFormatOptions,
   *   parseNumberSkeleton
   * } from '@messageformat/number-skeleton'
   *
   * const src = 'currency/CAD unit-width-narrow'
   * const skeleton = parseNumberSkeleton(src, console.error)
   * // {
   * //   unit: { style: 'currency', currency: 'CAD' },
   * //   unitWidth: 'unit-width-narrow'
   * // }
   *
   * getNumberFormatOptions(skeleton, console.error)
   * // {
   * //   style: 'currency',
   * //   currency: 'CAD',
   * //   currencyDisplay: 'narrowSymbol',
   * //   unitDisplay: 'narrow'
   * // }
   *
   * const sk2 = parseNumberSkeleton('group-min2')
   * // { group: 'group-min2' }
   *
   * getNumberFormatOptions(sk2, console.error)
   * // Error: The stem group-min2 is not supported
   * //   at UnsupportedError.NumberFormatError ... {
   * //     code: 'UNSUPPORTED',
   * //     stem: 'group-min2'
   * //   }
   * // {}
   * ```
   */function getNumberFormatOptions(t,n){const{decimal:r,group:o,integerWidth:s,notation:i,precision:l,roundingMode:u,sign:h,unit:p,unitPer:m,unitWidth:g}=t;const fail=(t,r)=>{n&&n(new UnsupportedError(t,r))};const y={};if(p)switch(p.style){case"base-unit":y.style="decimal";break;case"currency":y.style="currency";y.currency=p.currency;break;case"measure-unit":y.style="unit";y.unit=p.unit.replace(/.*-/,"");m&&(y.unit+="-per-"+m.replace(/.*-/,""));break;case"percent":y.style="percent";break;case"permille":fail("permille");break}switch(g){case"unit-width-full-name":y.currencyDisplay="name";y.unitDisplay="long";break;case"unit-width-hidden":fail(g);break;case"unit-width-iso-code":y.currencyDisplay="code";break;case"unit-width-narrow":y.currencyDisplay="narrowSymbol";y.unitDisplay="narrow";break;case"unit-width-short":y.currencyDisplay="symbol";y.unitDisplay="short";break}switch(o){case"group-off":y.useGrouping=false;break;case"group-auto":y.useGrouping=true;break;case"group-min2":case"group-on-aligned":case"group-thousands":fail(o);y.useGrouping=true;break}if(l)switch(l.style){case"precision-fraction":{const{minFraction:t,maxFraction:n,minSignificant:r,maxSignificant:o,source:s}=l;if(typeof t==="number"){y.minimumFractionDigits=t;typeof r==="number"&&fail("precision-fraction",s)}typeof n==="number"&&(y.maximumFractionDigits=n);typeof r==="number"&&(y.minimumSignificantDigits=r);typeof o==="number"&&(y.maximumSignificantDigits=o);break}case"precision-integer":y.maximumFractionDigits=0;break;case"precision-unlimited":y.maximumFractionDigits=20;break;case"precision-increment":break;case"precision-currency-standard":y.trailingZeroDisplay=l.trailingZero;break;case"precision-currency-cash":fail(l.style);break}if(i)switch(i.style){case"compact-short":y.notation="compact";y.compactDisplay="short";break;case"compact-long":y.notation="compact";y.compactDisplay="long";break;case"notation-simple":y.notation="standard";break;case"scientific":case"engineering":{const{expDigits:t,expSign:n,source:r,style:o}=i;y.notation=o;(t&&t>1||n&&n!=="sign-auto")&&fail(o,r);break}}if(s){const{min:t,max:n,source:r}=s;t>0&&(y.minimumIntegerDigits=t);if(Number(n)>0){const t=y.notation==="engineering"||y.notation==="scientific";n===3&&t?y.notation="engineering":fail("integer-width",r)}}switch(h){case"sign-auto":y.signDisplay="auto";break;case"sign-always":y.signDisplay="always";break;case"sign-except-zero":y.signDisplay="exceptZero";break;case"sign-never":y.signDisplay="never";break;case"sign-accounting":y.currencySign="accounting";break;case"sign-accounting-always":y.currencySign="accounting";y.signDisplay="always";break;case"sign-accounting-except-zero":y.currencySign="accounting";y.signDisplay="exceptZero";break}r==="decimal-always"&&fail(r);u&&fail(u);return y}function parseAffixToken(t,n,r){const o=t[n];switch(o){case"%":return{char:"%",style:"percent",width:1};case"‰":return{char:"%",style:"permille",width:1};case"¤":{let s=1;while(t[++n]==="¤")++s;switch(s){case 1:return{char:o,currency:"default",width:s};case 2:return{char:o,currency:"iso-code",width:s};case 3:return{char:o,currency:"full-name",width:s};case 5:return{char:o,currency:"narrow",width:s};default:{const t=`Invalid number (${s}) of ¤ chars in pattern`;r(new PatternError("¤",t));return null}}}case"*":{const r=t[n+1];if(r)return{char:o,pad:r,width:2};break}case"+":case"-":return{char:o,width:1};case"'":{let s=t[++n];let i=2;if(s==="'")return{char:o,str:s,width:i};while(true){const l=t[++n];++i;if(l===void 0){const t=`Unterminated quoted literal in pattern: ${s}`;r(new PatternError("'",t));return{char:o,str:s,width:i}}if(l==="'"){if(t[++n]!=="'")return{char:o,str:s,width:i};++i}s+=l}}}return null}const isDigit=t=>t>="0"&&t<="9";function parseNumberToken(t,n){const r=t[n];if(isDigit(r)){let o=r;while(true){const r=t[++n];if(!isDigit(r))return{char:"0",digits:o,width:o.length};o+=r}}switch(r){case"#":{let o=1;while(t[++n]==="#")++o;return{char:r,width:o}}case"@":{let o=1;while(t[++n]==="@")++o;let s=o;n-=1;while(t[++n]==="#")++s;return{char:r,min:o,width:s}}case"E":{const o=t[n+1]==="+";o&&++n;let s=0;while(t[++n]==="0")++s;const i=(o?2:1)+s;if(s)return{char:r,expDigits:s,plus:o,width:i};break}case".":case",":return{char:r,width:1}}return null}function parseSubpattern(t,n,r){let o;(function(t){t[t.Prefix=0]="Prefix";t[t.Number=1]="Number";t[t.Suffix=2]="Suffix"})(o||(o={}));const s=[];const i=[];const l=[];let u=o.Prefix;let h="";while(n<t.length){const p=t[n];if(p===";"){n+=1;break}switch(u){case o.Prefix:{const l=parseAffixToken(t,n,r);if(l){if(h){s.push({char:"'",str:h,width:h.length});h=""}s.push(l);n+=l.width}else{const r=parseNumberToken(t,n);if(r){if(h){s.push({char:"'",str:h,width:h.length});h=""}u=o.Number;i.push(r);n+=r.width}else{h+=p;n+=1}}break}case o.Number:{const r=parseNumberToken(t,n);if(r){i.push(r);n+=r.width}else u=o.Suffix;break}case o.Suffix:{const o=parseAffixToken(t,n,r);if(o){if(h){l.push({char:"'",str:h,width:h.length});h=""}l.push(o);n+=o.width}else{h+=p;n+=1}break}}}h&&l.push({char:"'",str:h,width:h.length});return{pattern:{prefix:s,number:i,suffix:l},pos:n}}function parseTokens(t,n){const{pattern:r,pos:o}=parseSubpattern(t,0,n);if(o<t.length){const{pattern:s}=parseSubpattern(t,o,n);return{tokens:r,negative:s}}return{tokens:r}}function parseNumberAsSkeleton(t,n){const r={};let o=false;let s=false;let i=0;let l="";let u=-1;let h="";let p=0;for(let m=0;m<t.length;++m){const g=t[m];switch(g.char){case"#":if(u===-1){if(l){const t="Pattern has # after integer digits";n(new PatternError("#",t))}i+=g.width}else p+=g.width;break;case"0":if(u===-1)l+=g.digits;else{if(p){const t="Pattern has digits after # in fraction";n(new PatternError("0",t))}h+=g.digits}break;case"@":r.precision&&n(new MaskedValueError("precision",r.precision));r.precision={style:"precision-fraction",minSignificant:g.min,maxSignificant:g.width};break;case",":o=true;break;case".":if(u===1){const t="Pattern has more than one decimal separator";n(new PatternError(".",t))}u=m;break;case"E":s&&n(new MaskedValueError("exponent",r.notation));if(o){const t="Exponential patterns may not contain grouping separators";n(new PatternError("E",t))}r.notation={style:"scientific"};g.expDigits>1&&(r.notation.expDigits=g.expDigits);g.plus&&(r.notation.expSign="sign-always");s=true}}o?r.group="group-auto":i+l.length>3&&(r.group="group-off");const m=Number(`${l||"0"}.${h}`);m&&(r.precision={style:"precision-increment",increment:m});if(s){r.precision&&!m||(r.integerWidth=i?{min:1,max:i+l.length}:{min:Math.max(1,l.length)});if(r.precision)m||(r.integerWidth={min:1,max:1});else{const t=l.length+h.length;if(u===-1)t>0&&(r.precision={style:"precision-fraction",maxSignificant:t});else{r.precision={style:"precision-fraction",maxSignificant:Math.max(1,t)+p};t>1&&(r.precision.minSignificant=t)}}}else{l.length>1&&(r.integerWidth={min:l.length});r.precision||!h.length&&!p||(r.precision={style:"precision-fraction",minFraction:h.length,maxFraction:h.length+p})}return r}function handleAffix(t,n,r,o,s){let i=false;let l="";for(const u of t)switch(u.char){case"%":n.unit={style:u.style};s?i=true:l="";break;case"¤":if(!r){const t="The ¤ pattern requires a currency";o(new PatternError("¤",t));break}n.unit={style:"currency",currency:r};switch(u.currency){case"iso-code":n.unitWidth="unit-width-iso-code";break;case"full-name":n.unitWidth="unit-width-full-name";break;case"narrow":n.unitWidth="unit-width-narrow";break}s?i=true:l="";break;case"*":break;case"+":i||(l+="+");break;case"'":i||(l+=u.str);break}return l}function getNegativeAffix(t,n){let r=false;let o="";for(const s of t)switch(s.char){case"%":case"¤":n?r=true:o="";break;case"-":r||(o+="-");break;case"'":r||(o+=s.str);break}return o}
/**
   * Parse an {@link
   * http://unicode.org/reports/tr35/tr35-numbers.html#Number_Format_Patterns |
   * ICU NumberFormatter pattern} string into a {@link Skeleton} structure.
   *
   * @public
   * @param src - The pattern string
   * @param currency - If the pattern includes ¤ tokens, their skeleton
   *   representation requires a three-letter currency code.
   * @param onError - Called when the parser encounters a syntax error. The
   *   function will still return a {@link Skeleton}, but it will be incomplete
   *   and/or inaccurate. If not defined, the error will be thrown instead.
   *
   * @remarks
   * Unlike the skeleton parser, the pattern parser is not able to return partial
   * results on error, and will instead throw. Output padding is not supported.
   *
   * @example
   * ```js
   * import { parseNumberPattern } from '@messageformat/number-skeleton'
   *
   * parseNumberPattern('#,##0.00 ¤', 'EUR', console.error)
   * // {
   * //   group: 'group-auto',
   * //   precision: {
   * //     style: 'precision-fraction',
   * //     minFraction: 2,
   * //     maxFraction: 2
   * //   },
   * //   unit: { style: 'currency', currency: 'EUR' }
   * // }
   * ```
   */function parseNumberPattern(t,n){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:t=>{throw t};const{tokens:o,negative:s}=parseTokens(t,r);const i=parseNumberAsSkeleton(o.number,r);const l=handleAffix(o.prefix,i,n,r,true);const u=handleAffix(o.suffix,i,n,r,false);if(s){const t=getNegativeAffix(s.prefix,true);const n=getNegativeAffix(s.suffix,false);i.affix={pos:[l,u],neg:[t,n]};i.sign="sign-never"}else(l||u)&&(i.affix={pos:[l,u]});return i}function isNumberingSystem(t){const n=["arab","arabext","bali","beng","deva","fullwide","gujr","guru","hanidec","khmr","knda","laoo","latn","limb","mlym","mong","mymr","orya","tamldec","telu","thai","tibt"];return n.indexOf(t)!==-1}function isUnit(t){const n=["acceleration","angle","area","concentr","consumption","digital","duration","electric","energy","force","frequency","graphics","length","light","mass","power","pressure","speed","temperature","torque","volume"];const[r]=t.split("-",1);return n.indexOf(r)!==-1}const r={"compact-short":0,"compact-long":0,"notation-simple":0,scientific:2,engineering:2,percent:0,permille:0,"base-unit":0,currency:1,"measure-unit":1,"per-measure-unit":1,"unit-width-narrow":0,"unit-width-short":0,"unit-width-full-name":0,"unit-width-iso-code":0,"unit-width-hidden":0,"precision-integer":0,"precision-unlimited":0,"precision-currency-standard":1,"precision-currency-cash":0,"precision-increment":1,"rounding-mode-ceiling":0,"rounding-mode-floor":0,"rounding-mode-down":0,"rounding-mode-up":0,"rounding-mode-half-even":0,"rounding-mode-half-down":0,"rounding-mode-half-up":0,"rounding-mode-unnecessary":0,"integer-width":1,scale:1,"group-off":0,"group-min2":0,"group-auto":0,"group-on-aligned":0,"group-thousands":0,latin:0,"numbering-system":1,"sign-auto":0,"sign-always":0,"sign-never":0,"sign-accounting":0,"sign-accounting-always":0,"sign-except-zero":0,"sign-accounting-except-zero":0,"decimal-auto":0,"decimal-always":0};const o={currency:1,"integer-width":1,"measure-unit":1,"numbering-system":1,"per-measure-unit":1,"precision-increment":1,scale:1};function hasMaxOption(t){return t in r}function hasMinOption(t){return t in o}function validOptions(t,n,s){if(hasMaxOption(t)){const i=r[t];if(n.length>i){if(i===0)for(const r of n)s(new BadOptionError(t,r));else s(new TooManyOptionsError(t,n,i));return false}if(hasMinOption(t)&&n.length<o[t]){s(new MissingOptionError(t));return false}}return true}function parseBlueprintDigits(t,n){const r=n==="fraction"?/^\.(0*)(\+|#*)$/:/^(@+)(\+|#*)$/;const o=t&&t.match(r);if(o){const t=o[1].length;switch(o[2].charAt(0)){case"":return{min:t,max:t};case"+":return{min:t,max:null};case"#":return{min:t,max:t+o[2].length}}}return null}function parsePrecisionBlueprint(t,n,r){const o=parseBlueprintDigits(t,"fraction");if(o){n.length>1&&r(new TooManyOptionsError(t,n,1));const s={style:"precision-fraction",source:t,minFraction:o.min};o.max!=null&&(s.maxFraction=o.max);const i=n[0];const l=parseBlueprintDigits(i,"significant");if(l){s.source=`${t}/${i}`;s.minSignificant=l.min;l.max!=null&&(s.maxSignificant=l.max)}else i&&r(new BadOptionError(t,i));return s}const s=parseBlueprintDigits(t,"significant");if(s){for(const o of n)r(new BadOptionError(t,o));const o={style:"precision-fraction",source:t,minSignificant:s.min};s.max!=null&&(o.maxSignificant=s.max);return o}return null}class TokenParser{constructor(t){this.skeleton={};this.onError=t}badOption(t,n){this.onError(new BadOptionError(t,n))}assertEmpty(t){const n=this.skeleton[t];n&&this.onError(new MaskedValueError(t,n))}parseToken(t,n){if(!validOptions(t,n,this.onError))return;const r=n[0];const o=this.skeleton;switch(t){case"compact-short":case"compact-long":case"notation-simple":this.assertEmpty("notation");o.notation={style:t};break;case"scientific":case"engineering":{let r=null;let s;for(const o of n)switch(o){case"sign-auto":case"sign-always":case"sign-never":case"sign-accounting":case"sign-accounting-always":case"sign-except-zero":case"sign-accounting-except-zero":s=o;break;default:/^\+e+$/.test(o)?r=o.length-1:this.badOption(t,o)}this.assertEmpty("notation");const i=n.join("/");o.notation=r&&s?{style:t,source:i,expDigits:r,expSign:s}:r?{style:t,source:i,expDigits:r}:s?{style:t,source:i,expSign:s}:{style:t,source:i};break}case"percent":case"permille":case"base-unit":this.assertEmpty("unit");o.unit={style:t};break;case"currency":if(/^[A-Z]{3}$/.test(r)){this.assertEmpty("unit");o.unit={style:t,currency:r}}else this.badOption(t,r);break;case"measure-unit":if(isUnit(r)){this.assertEmpty("unit");o.unit={style:t,unit:r}}else this.badOption(t,r);break;case"per-measure-unit":if(isUnit(r)){this.assertEmpty("unitPer");o.unitPer=r}else this.badOption(t,r);break;case"unit-width-narrow":case"unit-width-short":case"unit-width-full-name":case"unit-width-iso-code":case"unit-width-hidden":this.assertEmpty("unitWidth");o.unitWidth=t;break;case"precision-integer":case"precision-unlimited":case"precision-currency-cash":this.assertEmpty("precision");o.precision={style:t};break;case"precision-currency-standard":this.assertEmpty("precision");o.precision=r==="w"?{style:t,trailingZero:"stripIfInteger"}:{style:t};break;case"precision-increment":{const n=Number(r);if(n>0){this.assertEmpty("precision");o.precision={style:t,increment:n}}else this.badOption(t,r);break}case"rounding-mode-ceiling":case"rounding-mode-floor":case"rounding-mode-down":case"rounding-mode-up":case"rounding-mode-half-even":case"rounding-mode-half-odd":case"rounding-mode-half-ceiling":case"rounding-mode-half-floor":case"rounding-mode-half-down":case"rounding-mode-half-up":case"rounding-mode-unnecessary":this.assertEmpty("roundingMode");o.roundingMode=t;break;case"integer-width":if(/^\+0*$/.test(r)){this.assertEmpty("integerWidth");o.integerWidth={source:r,min:r.length-1}}else{const n=r.match(/^#*(0*)$/);if(n){this.assertEmpty("integerWidth");o.integerWidth={source:r,min:n[1].length,max:n[0].length}}else this.badOption(t,r)}break;case"scale":{const n=Number(r);if(n>0){this.assertEmpty("scale");o.scale=n}else this.badOption(t,r);break}case"group-off":case"group-min2":case"group-auto":case"group-on-aligned":case"group-thousands":this.assertEmpty("group");o.group=t;break;case"latin":this.assertEmpty("numberingSystem");o.numberingSystem="latn";break;case"numbering-system":if(isNumberingSystem(r)){this.assertEmpty("numberingSystem");o.numberingSystem=r}else this.badOption(t,r);break;case"sign-auto":case"sign-always":case"sign-never":case"sign-accounting":case"sign-accounting-always":case"sign-except-zero":case"sign-accounting-except-zero":this.assertEmpty("sign");o.sign=t;break;case"decimal-auto":case"decimal-always":this.assertEmpty("decimal");o.decimal=t;break;default:{const r=parsePrecisionBlueprint(t,n,this.onError);if(r){this.assertEmpty("precision");o.precision=r}else this.onError(new BadStemError(t))}}}}
/**
   * Parse an {@link
   * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md
   * | ICU NumberFormatter skeleton} string into a {@link Skeleton} structure.
   *
   * @public
   * @param src - The skeleton string
   * @param onError - Called when the parser encounters a syntax error. The
   *   function will still return a {@link Skeleton}, but it may not contain
   *   information for all tokens. If not defined, the error will be thrown
   *   instead.
   *
   * @example
   * ```js
   * import { parseNumberSkeleton } from '@messageformat/number-skeleton'
   *
   * parseNumberSkeleton('compact-short currency/GBP', console.error)
   * // {
   * //   notation: { style: 'compact-short' },
   * //   unit: { style: 'currency', currency: 'GBP' }
   * // }
   * ```
   */function parseNumberSkeleton(t){let n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:t=>{throw t};const r=[];for(const n of t.split(" "))if(n){const t=n.split("/");const o=t.shift()||"";r.push({stem:o,options:t})}const o=new TokenParser(n);for(const{stem:t,options:n}of r)o.parseToken(t,n);return o.skeleton}
/**
   * Returns a number formatter function for the given locales and number skeleton
   *
   * @remarks
   * Uses `Intl.NumberFormat` (ES2020) internally.
   *
   * @public
   * @param locales - One or more valid BCP 47 language tags, e.g. `fr` or `en-CA`
   * @param skeleton - An ICU NumberFormatter pattern or `::`-prefixed skeleton
   *   string, or a parsed `Skeleton` structure
   * @param currency - If `skeleton` is a pattern string that includes ¤ tokens,
   *   their skeleton representation requires a three-letter currency code.
   * @param onError - If defined, will be called separately for each encountered
   *   parsing error and unsupported feature.
   * @example
   * ```js
   * import { getNumberFormatter } from '@messageformat/number-skeleton'
   *
   * let src = ':: currency/CAD unit-width-narrow'
   * let fmt = getNumberFormatter('en-CA', src, console.error)
   * fmt(42) // '$42.00'
   *
   * src = '::percent scale/100'
   * fmt = getNumberFormatter('en', src, console.error)
   * fmt(0.3) // '30%'
   * ```
   */function getNumberFormatter(t,n,r,o){typeof n==="string"&&(n=n.indexOf("::")===0?parseNumberSkeleton(n.slice(2),o):parseNumberPattern(n,r,o));const s=getNumberFormatLocales(t,n);const i=getNumberFormatOptions(n,o);const l=getNumberFormatModifier(n);const u=new Intl.NumberFormat(s,i);if(n.affix){const[t,r]=n.affix.pos;const[o,s]=n.affix.neg||["",""];return n=>{const i=u.format(l(n));return n<0?`${o}${i}${s}`:`${t}${i}${r}`}}return t=>u.format(l(t))}
/**
   * Returns a string of JavaScript source that evaluates to a number formatter
   * function with the same `(value: number) => string` signature as the function
   * returned by {@link getNumberFormatter}.
   *
   * @remarks
   * The returned function will memoize an `Intl.NumberFormat` instance.
   *
   * @public
   * @param locales - One or more valid BCP 47 language tags, e.g. `fr` or `en-CA`
   * @param skeleton - An ICU NumberFormatter pattern or `::`-prefixed skeleton
   *   string, or a parsed `Skeleton` structure
   * @param currency - If `skeleton` is a pattern string that includes ¤ tokens,
   *   their skeleton representation requires a three-letter currency code.
   * @param onError - If defined, will be called separately for each encountered
   *   parsing error and unsupported feature.
   * @example
   * ```js
   * import { getNumberFormatterSource } from '@messageformat/number-skeleton'
   *
   * getNumberFormatterSource('en', '::percent', console.error)
   * // '(function() {\n' +
   * // '  var opt = {"style":"percent"};\n' +
   * // '  var nf = new Intl.NumberFormat(["en"], opt);\n' +
   * // '  var mod = function(n) { return n * 0.01; };\n' +
   * // '  return function(value) { return nf.format(mod(value)); }\n' +
   * // '})()'
   *
   * const src = getNumberFormatterSource('en-CA', ':: currency/CAD unit-width-narrow', console.error)
   * // '(function() {\n' +
   * // '  var opt = {"style":"currency","currency":"CAD","currencyDisplay":"narrowSymbol","unitDisplay":"narrow"};\n' +
   * // '  var nf = new Intl.NumberFormat(["en-CA"], opt);\n'
   * // '  return function(value) { return nf.format(value); }\n' +
   * // '})()'
   * const fmt = new Function(`return ${src}`)()
   * fmt(42) // '$42.00'
   * ```
   */function getNumberFormatterSource(t,n,r,o){typeof n==="string"&&(n=n.indexOf("::")===0?parseNumberSkeleton(n.slice(2),o):parseNumberPattern(n,r,o));const s=getNumberFormatLocales(t,n);const i=getNumberFormatOptions(n,o);const l=getNumberFormatModifierSource(n);const u=["(function() {",`var opt = ${JSON.stringify(i)};`,`var nf = new Intl.NumberFormat(${JSON.stringify(s)}, opt);`];let h="nf.format(value)";if(l){u.push(`var mod = ${l};`);h="nf.format(mod(value))"}if(n.affix){const[t,r]=n.affix.pos.map((t=>JSON.stringify(t)));if(n.affix.neg){const[o,s]=n.affix.neg.map((t=>JSON.stringify(t)));h=`value < 0 ? ${o} + ${h} + ${s} : ${t} + ${h} + ${r}`}else h=`${t} + ${h} + ${r}`}u.push(`return function(value) { return ${h}; }`);return u.join("\n  ")+"\n})()"}var s=typeof globalThis!=="undefined"?globalThis:typeof window!=="undefined"?window:typeof t!=="undefined"?t:typeof self!=="undefined"?self:{};function getDefaultExportFromCjs(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var i={};var l={};var u={exports:{}};(function(n){(function(t,r){n.exports?n.exports=r():t.moo=r()})(s,(function(){var n=Object.prototype.hasOwnProperty;var r=Object.prototype.toString;var o=typeof(new RegExp).sticky==="boolean";function isRegExp(t){return t&&r.call(t)==="[object RegExp]"}function isObject(t){return t&&typeof t==="object"&&!isRegExp(t)&&!Array.isArray(t)}function reEscape(t){return t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function reGroups(t){var n=new RegExp("|"+t);return n.exec("").length-1}function reCapture(t){return"("+t+")"}function reUnion(t){if(!t.length)return"(?!)";var n=t.map((function(t){return"(?:"+t+")"})).join("|");return"(?:"+n+")"}function regexpOrLiteral(t){if(typeof t==="string")return"(?:"+reEscape(t)+")";if(isRegExp(t)){if(t.ignoreCase)throw new Error("RegExp /i flag not allowed");if(t.global)throw new Error("RegExp /g flag is implied");if(t.sticky)throw new Error("RegExp /y flag is implied");if(t.multiline)throw new Error("RegExp /m flag is implied");return t.source}throw new Error("Not a pattern: "+t)}function pad(t,n){return t.length>n?t:Array(n-t.length+1).join(" ")+t}function lastNLines(t,n){var r=t.length;var o=0;while(true){var s=t.lastIndexOf("\n",r-1);if(s===-1)break;o++;r=s;if(o===n)break;if(r===0)break}var i=o<n?0:r+1;return t.substring(i).split("\n")}function objectToRules(t){var n=Object.getOwnPropertyNames(t);var r=[];for(var o=0;o<n.length;o++){var s=n[o];var i=t[s];var l=[].concat(i);if(s!=="include"){var u=[];l.forEach((function(t){if(isObject(t)){u.length&&r.push(ruleOptions(s,u));r.push(ruleOptions(s,t));u=[]}else u.push(t)}));u.length&&r.push(ruleOptions(s,u))}else for(var h=0;h<l.length;h++)r.push({include:l[h]})}return r}function arrayToRules(t){var n=[];for(var r=0;r<t.length;r++){var o=t[r];if(o.include){var s=[].concat(o.include);for(var i=0;i<s.length;i++)n.push({include:s[i]})}else{if(!o.type)throw new Error("Rule has no type: "+JSON.stringify(o));n.push(ruleOptions(o.type,o))}}return n}function ruleOptions(t,r){isObject(r)||(r={match:r});if(r.include)throw new Error("Matching rules cannot also include states");var o={defaultType:t,lineBreaks:!!r.error||!!r.fallback,pop:false,next:null,push:null,error:false,fallback:false,value:null,type:null,shouldThrow:false};for(var s in r)n.call(r,s)&&(o[s]=r[s]);if(typeof o.type==="string"&&t!==o.type)throw new Error("Type transform cannot be a string (type '"+o.type+"' for token '"+t+"')");var i=o.match;o.match=Array.isArray(i)?i:i?[i]:[];o.match.sort((function(t,n){return isRegExp(t)&&isRegExp(n)?0:isRegExp(n)?-1:isRegExp(t)?1:n.length-t.length}));return o}function toRules(t){return Array.isArray(t)?arrayToRules(t):objectToRules(t)}var s=ruleOptions("error",{lineBreaks:true,shouldThrow:true});function compileRules(t,n){var r=null;var i=Object.create(null);var l=true;var u=null;var h=[];var p=[];for(var m=0;m<t.length;m++)t[m].fallback&&(l=false);for(m=0;m<t.length;m++){var g=t[m];if(g.include)throw new Error("Inheritance is not allowed in stateless lexers");if(g.error||g.fallback){if(r)throw!g.fallback===!r.fallback?new Error("Multiple "+(g.fallback?"fallback":"error")+" rules not allowed (for token '"+g.defaultType+"')"):new Error("fallback and error are mutually exclusive (for token '"+g.defaultType+"')");r=g}var y=g.match.slice();if(l)while(y.length&&typeof y[0]==="string"&&y[0].length===1){var w=y.shift();i[w.charCodeAt(0)]=g}if(g.pop||g.push||g.next){if(!n)throw new Error("State-switching options are not allowed in stateless lexers (for token '"+g.defaultType+"')");if(g.fallback)throw new Error("State-switching options are not allowed on fallback tokens (for token '"+g.defaultType+"')")}if(y.length!==0){l=false;h.push(g);for(var v=0;v<y.length;v++){var k=y[v];if(isRegExp(k))if(u===null)u=k.unicode;else if(u!==k.unicode&&g.fallback===false)throw new Error("If one rule is /u then all must be")}var S=reUnion(y.map(regexpOrLiteral));var x=new RegExp(S);if(x.test(""))throw new Error("RegExp matches empty string: "+x);var E=reGroups(S);if(E>0)throw new Error("RegExp has capture groups: "+x+"\nUse (?: … ) instead");if(!g.lineBreaks&&x.test("\n"))throw new Error("Rule should declare lineBreaks: "+x);p.push(reCapture(S))}}var N=r&&r.fallback;var O=o&&!N?"ym":"gm";var F=o||N?"":"|";u===true&&(O+="u");var P=new RegExp(reUnion(p)+F,O);return{regexp:P,groups:h,fast:i,error:r||s}}function compile(t){var n=compileRules(toRules(t));return new Lexer({start:n},"start")}function checkStateGroup(t,n,r){var o=t&&(t.push||t.next);if(o&&!r[o])throw new Error("Missing state '"+o+"' (in token '"+t.defaultType+"' of state '"+n+"')");if(t&&t.pop&&+t.pop!==1)throw new Error("pop must be 1 (in token '"+t.defaultType+"' of state '"+n+"')")}function compileStates(t,n){var r=t.$all?toRules(t.$all):[];delete t.$all;var o=Object.getOwnPropertyNames(t);n||(n=o[0]);var s=Object.create(null);for(var i=0;i<o.length;i++){var l=o[i];s[l]=toRules(t[l]).concat(r)}for(i=0;i<o.length;i++){l=o[i];var u=s[l];var h=Object.create(null);for(var p=0;p<u.length;p++){var m=u[p];if(m.include){var g=[p,1];if(m.include!==l&&!h[m.include]){h[m.include]=true;var y=s[m.include];if(!y)throw new Error("Cannot include nonexistent state '"+m.include+"' (in state '"+l+"')");for(var w=0;w<y.length;w++){var v=y[w];u.indexOf(v)===-1&&g.push(v)}}u.splice.apply(u,g);p--}}}var k=Object.create(null);for(i=0;i<o.length;i++){l=o[i];k[l]=compileRules(s[l],true)}for(i=0;i<o.length;i++){var S=o[i];var x=k[S];var E=x.groups;for(p=0;p<E.length;p++)checkStateGroup(E[p],S,k);var N=Object.getOwnPropertyNames(x.fast);for(p=0;p<N.length;p++)checkStateGroup(x.fast[N[p]],S,k)}return new Lexer(k,n)}function keywordTransform(t){var n=typeof Map!=="undefined";var r=n?new Map:Object.create(null);var o=Object.getOwnPropertyNames(t);for(var s=0;s<o.length;s++){var i=o[s];var l=t[i];var u=Array.isArray(l)?l:[l];u.forEach((function(t){if(typeof t!=="string")throw new Error("keyword must be string (in keyword '"+i+"')");n?r.set(t,i):r[t]=i}))}return function(t){return n?r.get(t):r[t]}}var Lexer=function(n,r){(this||t).startState=r;(this||t).states=n;(this||t).buffer="";(this||t).stack=[];this.reset()};Lexer.prototype.reset=function(n,r){(this||t).buffer=n||"";(this||t).index=0;(this||t).line=r?r.line:1;(this||t).col=r?r.col:1;(this||t).queuedToken=r?r.queuedToken:null;(this||t).queuedText=r?r.queuedText:"";(this||t).queuedThrow=r?r.queuedThrow:null;this.setState(r?r.state:(this||t).startState);(this||t).stack=r&&r.stack?r.stack.slice():[];return this||t};Lexer.prototype.save=function(){return{line:(this||t).line,col:(this||t).col,state:(this||t).state,stack:(this||t).stack.slice(),queuedToken:(this||t).queuedToken,queuedText:(this||t).queuedText,queuedThrow:(this||t).queuedThrow}};Lexer.prototype.setState=function(n){if(n&&(this||t).state!==n){(this||t).state=n;var r=(this||t).states[n];(this||t).groups=r.groups;(this||t).error=r.error;(this||t).re=r.regexp;(this||t).fast=r.fast}};Lexer.prototype.popState=function(){this.setState((this||t).stack.pop())};Lexer.prototype.pushState=function(n){(this||t).stack.push((this||t).state);this.setState(n)};var i=o?function(t,n){return t.exec(n)}:function(t,n){var r=t.exec(n);return r[0].length===0?null:r};Lexer.prototype._getGroup=function(n){var r=(this||t).groups.length;for(var o=0;o<r;o++)if(n[o+1]!==void 0)return(this||t).groups[o];throw new Error("Cannot find token type for matched text")};function tokenToString(){return(this||t).value}Lexer.prototype.next=function(){var n=(this||t).index;if((this||t).queuedGroup){var r=this._token((this||t).queuedGroup,(this||t).queuedText,n);(this||t).queuedGroup=null;(this||t).queuedText="";return r}var o=(this||t).buffer;if(n!==o.length){var s=(this||t).fast[o.charCodeAt(n)];if(s)return this._token(s,o.charAt(n),n);var l=(this||t).re;l.lastIndex=n;var u=i(l,o);var h=(this||t).error;if(u==null)return this._token(h,o.slice(n,o.length),n);s=this._getGroup(u);var p=u[0];if(h.fallback&&u.index!==n){(this||t).queuedGroup=s;(this||t).queuedText=p;return this._token(h,o.slice(n,u.index),n)}return this._token(s,p,n)}};Lexer.prototype._token=function(n,r,o){var s=0;if(n.lineBreaks){var i=/\n/g;var l=1;if(r==="\n")s=1;else while(i.exec(r)){s++;l=i.lastIndex}}var u={type:typeof n.type==="function"&&n.type(r)||n.defaultType,value:typeof n.value==="function"?n.value(r):r,text:r,toString:tokenToString,offset:o,lineBreaks:s,line:(this||t).line,col:(this||t).col};var h=r.length;(this||t).index+=h;(this||t).line+=s;s!==0?(this||t).col=h-l+1:(this||t).col+=h;if(n.shouldThrow){var p=new Error(this.formatError(u,"invalid syntax"));throw p}n.pop?this.popState():n.push?this.pushState(n.push):n.next&&this.setState(n.next);return u};if(typeof Symbol!=="undefined"&&Symbol.iterator){var LexerIterator=function(n){(this||t).lexer=n};LexerIterator.prototype.next=function(){var n=(this||t).lexer.next();return{value:n,done:!n}};LexerIterator.prototype[Symbol.iterator]=function(){return this||t};Lexer.prototype[Symbol.iterator]=function(){return new LexerIterator(this||t)}}Lexer.prototype.formatError=function(n,r){if(n==null){var o=(this||t).buffer.slice((this||t).index);n={text:o,offset:(this||t).index,lineBreaks:o.indexOf("\n")===-1?0:1,line:(this||t).line,col:(this||t).col}}var s=2;var i=Math.max(n.line-s,1);var l=n.line+s;var u=String(l).length;var h=lastNLines((this||t).buffer,(this||t).line-n.line+s+1).slice(0,5);var p=[];p.push(r+" at line "+n.line+" col "+n.col+":");p.push("");for(var m=0;m<h.length;m++){var g=h[m];var y=i+m;p.push(pad(String(y),u)+"  "+g);y===n.line&&p.push(pad("",u+n.col+1)+"^")}return p.join("\n")};Lexer.prototype.clone=function(){return new Lexer((this||t).states,(this||t).state)};Lexer.prototype.has=function(t){return true};return{compile:compile,states:compileStates,error:Object.freeze({error:true}),fallback:Object.freeze({fallback:true}),keywords:keywordTransform}}))})(u);var h=u.exports;(function(t){var n=s&&s.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(t,"__esModule",{value:true});t.lexer=t.states=void 0;const r=n(h);t.states={body:{doubleapos:{match:"''",value:()=>"'"},quoted:{lineBreaks:true,match:/'[{}#](?:[^]*?[^'])?'(?!')/u,value:t=>t.slice(1,-1).replace(/''/g,"'")},argument:{lineBreaks:true,match:/\{\s*[^\p{Pat_Syn}\p{Pat_WS}]+\s*/u,push:"arg",value:t=>t.substring(1).trim()},octothorpe:"#",end:{match:"}",pop:1},content:{lineBreaks:true,match:/[^][^{}#']*/u}},arg:{select:{lineBreaks:true,match:/,\s*(?:plural|select|selectordinal)\s*,\s*/u,next:"select",value:t=>t.split(",")[1].trim()},"func-args":{lineBreaks:true,match:/,\s*[^\p{Pat_Syn}\p{Pat_WS}]+\s*,/u,next:"body",value:t=>t.split(",")[1].trim()},"func-simple":{lineBreaks:true,match:/,\s*[^\p{Pat_Syn}\p{Pat_WS}]+\s*/u,value:t=>t.substring(1).trim()},end:{match:"}",pop:1}},select:{offset:{lineBreaks:true,match:/\s*offset\s*:\s*\d+\s*/u,value:t=>t.split(":")[1].trim()},case:{lineBreaks:true,match:/\s*(?:=\d+|[^\p{Pat_Syn}\p{Pat_WS}]+)\s*\{/u,push:"body",value:t=>t.substring(0,t.indexOf("{")).trim()},end:{match:/\s*\}/u,pop:1}}};t.lexer=r.default.states(t.states)})(l);Object.defineProperty(i,"__esModule",{value:true});var p=i.parse=i.ParseError=void 0;const m=l;const getContext=t=>({offset:t.offset,line:t.line,col:t.col,text:t.text,lineBreaks:t.lineBreaks});const isSelectType=t=>t==="plural"||t==="select"||t==="selectordinal";function strictArgStyleParam(t,n){let r="";let o="";for(const s of n){const n=s.ctx.text;o+=n;switch(s.type){case"content":r+=s.value;break;case"argument":case"function":case"octothorpe":r+=n;break;default:throw new ParseError(t,`Unsupported part in strict mode function arg style: ${n}`)}}const s={type:"content",value:r.trim(),ctx:Object.assign({},n[0].ctx,{text:o})};return[s]}const g=["number","date","time","spellout","ordinal","duration"];const y=["zero","one","two","few","many","other"];class ParseError extends Error{constructor(t,n){super(m.lexer.formatError(t,n))}}i.ParseError=ParseError;class Parser{constructor(t,n){var r,o,s,i;this.lexer=m.lexer.reset(t);this.cardinalKeys=(r=n===null||n===void 0?void 0:n.cardinal)!==null&&r!==void 0?r:y;this.ordinalKeys=(o=n===null||n===void 0?void 0:n.ordinal)!==null&&o!==void 0?o:y;this.strict=(s=n===null||n===void 0?void 0:n.strict)!==null&&s!==void 0&&s;this.strictPluralKeys=(i=n===null||n===void 0?void 0:n.strictPluralKeys)===null||i===void 0||i}parse(){return this.parseBody(false,true)}checkSelectKey(t,n,r){if(r[0]==="="){if(n==="select")throw new ParseError(t,`The case ${r} is not valid with select`)}else if(n!=="select"){const o=n==="plural"?this.cardinalKeys:this.ordinalKeys;if(this.strictPluralKeys&&o.length>0&&!o.includes(r)){const o=`The ${n} case ${r} is not valid in this locale`;throw new ParseError(t,o)}}}parseSelect(t,n,r,o){let{value:s}=t;const i={type:o,arg:s,cases:[],ctx:r};o==="plural"||o==="selectordinal"?n=true:this.strict&&(n=false);for(const t of this.lexer)switch(t.type){case"offset":if(o==="select")throw new ParseError(t,"Unexpected plural offset for select");if(i.cases.length>0)throw new ParseError(t,"Plural offset must be set before cases");i.pluralOffset=Number(t.value);r.text+=t.text;r.lineBreaks+=t.lineBreaks;break;case"case":this.checkSelectKey(t,o,t.value);i.cases.push({key:t.value,tokens:this.parseBody(n),ctx:getContext(t)});break;case"end":return i;default:throw new ParseError(t,`Unexpected lexer token: ${t.type}`)}throw new ParseError(null,"Unexpected message end")}parseArgToken(t,n){const r=getContext(t);const o=this.lexer.next();if(!o)throw new ParseError(null,"Unexpected message end");r.text+=o.text;r.lineBreaks+=o.lineBreaks;if(this.strict&&(o.type==="func-simple"||o.type==="func-args")&&!g.includes(o.value)){const n=`Invalid strict mode function arg type: ${o.value}`;throw new ParseError(t,n)}switch(o.type){case"end":return{type:"argument",arg:t.value,ctx:r};case"func-simple":{const n=this.lexer.next();if(!n)throw new ParseError(null,"Unexpected message end");if(n.type!=="end")throw new ParseError(n,`Unexpected lexer token: ${n.type}`);r.text+=n.text;if(isSelectType(o.value.toLowerCase()))throw new ParseError(o,`Invalid type identifier: ${o.value}`);return{type:"function",arg:t.value,key:o.value,ctx:r}}case"func-args":{if(isSelectType(o.value.toLowerCase())){const t=`Invalid type identifier: ${o.value}`;throw new ParseError(o,t)}let s=this.parseBody(!this.strict&&n);this.strict&&s.length>0&&(s=strictArgStyleParam(t,s));return{type:"function",arg:t.value,key:o.value,param:s,ctx:r}}case"select":if(isSelectType(o.value))return this.parseSelect(t,n,r,o.value);throw new ParseError(o,`Unexpected select type ${o.value}`);default:throw new ParseError(o,`Unexpected lexer token: ${o.type}`)}}parseBody(t,n){const r=[];let o=null;for(const s of this.lexer)if(s.type==="argument"){o&&(o=null);r.push(this.parseArgToken(s,t))}else if(s.type==="octothorpe"&&t){o&&(o=null);r.push({type:"octothorpe",ctx:getContext(s)})}else{if(s.type==="end"&&!n)return r;{let n=s.value;if(!t&&s.type==="quoted"&&n[0]==="#"){if(n.includes("{")){const t=`Unsupported escape pattern: ${n}`;throw new ParseError(s,t)}n=s.text}if(o){o.value+=n;o.ctx.text+=s.text;o.ctx.lineBreaks+=s.lineBreaks}else{o={type:"content",value:n,ctx:getContext(s)};r.push(o)}}}if(n)return r;throw new ParseError(null,"Unexpected message end")}}function parse(t){let n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const r=new Parser(t,n);return r.parse()}p=i.parse=parse;function _nf$1(t){return _nf$1[t]||(_nf$1[t]=new Intl.NumberFormat(t))}
/**
   * Utility function for `#` in plural rules
   *
   * @param lc The current locale
   * @param value The value to operate on
   * @param offset An offset, set by the surrounding context
   * @returns The result of applying the offset to the input value
   */function number(t,n,r){return _nf$1(t).format(n-r)}
/**
   * Strict utility function for `#` in plural rules
   *
   * Will throw an Error if `value` or `offset` are non-numeric.
   *
   * @param lc The current locale
   * @param value The value to operate on
   * @param offset An offset, set by the surrounding context
   * @param name The name of the argument, used for error reporting
   * @returns The result of applying the offset to the input value
   */function strictNumber(t,n,r,o){var s=n-r;if(isNaN(s))throw new Error("`"+o+"` or its offset is not a number");return _nf$1(t).format(s)}
/**
   * Utility function for `{N, plural|selectordinal, ...}`
   *
   * @param value The key to use to find a pluralization rule
   * @param offset An offset to apply to `value`
   * @param lcfunc A locale function from `pluralFuncs`
   * @param data The object from which results are looked up
   * @param isOrdinal If true, use ordinal rather than cardinal rules
   * @returns The result of the pluralization
   */function plural(t,n,r,o,s){if({}.hasOwnProperty.call(o,t))return o[t];n&&(t-=n);var i=r(t,s);return i in o?o[i]:o.other}
/**
   * Utility function for `{N, select, ...}`
   *
   * @param value The key to use to find a selection
   * @param data The object from which results are looked up
   * @returns The result of the select statement
   */function select(t,n){return{}.hasOwnProperty.call(n,t)?n[t]:n.other}
/**
   * Checks that all required arguments are set to defined values
   *
   * Throws on failure; otherwise returns undefined
   *
   * @param keys The required keys
   * @param data The data object being checked
   */function reqArgs(t,n){for(var r=0;r<t.length;++r)if(!n||n[t[r]]===void 0)throw new Error("Message requires argument '".concat(t[r],"'"))}var w=Object.freeze({__proto__:null,_nf:_nf$1,number:number,plural:plural,reqArgs:reqArgs,select:select,strictNumber:strictNumber});
/**
   * Represent a date as a short/default/long/full string
   *
   * @param value Either a Unix epoch time in milliseconds, or a string value
   *   representing a date. Parsed with `new Date(value)`
   *
   * @example
   * ```js
   * var mf = new MessageFormat(['en', 'fi']);
   *
   * mf.compile('Today is {T, date}')({ T: Date.now() })
   * // 'Today is Feb 21, 2016'
   *
   * mf.compile('Tänään on {T, date}', 'fi')({ T: Date.now() })
   * // 'Tänään on 21. helmikuuta 2016'
   *
   * mf.compile('Unix time started on {T, date, full}')({ T: 0 })
   * // 'Unix time started on Thursday, January 1, 1970'
   *
   * var cf = mf.compile('{sys} became operational on {d0, date, short}');
   * cf({ sys: 'HAL 9000', d0: '12 January 1999' })
   * // 'HAL 9000 became operational on 1/12/1999'
   * ```
   */function date(t,n,r){var o={day:"numeric",month:"short",year:"numeric"};switch(r){case"full":o.weekday="long";case"long":o.month="long";break;case"short":o.month="numeric"}return new Date(t).toLocaleDateString(n,o)}
/**
   * Represent a duration in seconds as a string
   *
   * @param value A finite number, or its string representation
   * @return Includes one or two `:` separators, and matches the pattern
   *   `hhhh:mm:ss`, possibly with a leading `-` for negative values and a
   *   trailing `.sss` part for non-integer input
   *
   * @example
   * ```js
   * var mf = new MessageFormat();
   *
   * mf.compile('It has been {D, duration}')({ D: 123 })
   * // 'It has been 2:03'
   *
   * mf.compile('Countdown: {D, duration}')({ D: -151200.42 })
   * // 'Countdown: -42:00:00.420'
   * ```
   */function duration(t){typeof t!=="number"&&(t=Number(t));if(!isFinite(t))return String(t);var n="";if(t<0){n="-";t=Math.abs(t)}else t=Number(t);var r=t%60;var o=[Math.round(r)===r?r:r.toFixed(3)];if(t<60)o.unshift(0);else{t=Math.round((t-Number(o[0]))/60);o.unshift(t%60);if(t>=60){t=Math.round((t-Number(o[0]))/60);o.unshift(t)}}var s=o.shift();return n+s+":"+o.map((function(t){return Number(t)<10?"0"+String(t):String(t)})).join(":")}var v={};function nf(t,n){var r=String(t)+JSON.stringify(n);v[r]||(v[r]=new Intl.NumberFormat(t,n));return v[r]}function numberFmt(t,n,r,o){var s=r&&r.split(":")||[],i=s[0],l=s[1];var u={integer:{maximumFractionDigits:0},percent:{style:"percent"},currency:{style:"currency",currency:l&&l.trim()||o,minimumFractionDigits:2,maximumFractionDigits:2}};return nf(n,u[i]||{}).format(t)}var numberCurrency=function(t,n,r){return nf(n,{style:"currency",currency:r,minimumFractionDigits:2,maximumFractionDigits:2}).format(t)};var numberInteger=function(t,n){return nf(n,{maximumFractionDigits:0}).format(t)};var numberPercent=function(t,n){return nf(n,{style:"percent"}).format(t)};
/**
   * Represent a time as a short/default/long string
   *
   * @param value Either a Unix epoch time in milliseconds, or a string value
   *   representing a date. Parsed with `new Date(value)`
   *
   * @example
   * ```js
   * var mf = new MessageFormat(['en', 'fi']);
   *
   * mf.compile('The time is now {T, time}')({ T: Date.now() })
   * // 'The time is now 11:26:35 PM'
   *
   * mf.compile('Kello on nyt {T, time}', 'fi')({ T: Date.now() })
   * // 'Kello on nyt 23.26.35'
   *
   * var cf = mf.compile('The Eagle landed at {T, time, full} on {T, date, full}');
   * cf({ T: '1969-07-20 20:17:40 UTC' })
   * // 'The Eagle landed at 10:17:40 PM GMT+2 on Sunday, July 20, 1969'
   * ```
   */function time(t,n,r){var o={second:"numeric",minute:"numeric",hour:"numeric"};switch(r){case"full":case"long":o.timeZoneName="short";break;case"short":delete o.second}return new Date(t).toLocaleTimeString(n,o)}var k=Object.freeze({__proto__:null,date:date,duration:duration,numberCurrency:numberCurrency,numberFmt:numberFmt,numberInteger:numberInteger,numberPercent:numberPercent,time:time});const S={break:true,continue:true,delete:true,else:true,for:true,function:true,if:true,in:true,new:true,return:true,this:true,typeof:true,var:true,void:true,while:true,with:true,case:true,catch:true,default:true,do:true,finally:true,instanceof:true,switch:true,throw:true,try:true};const x={await:true,debugger:true,class:true,enum:true,extends:true,super:true,const:true,export:true,import:true,null:true,true:true,false:true,implements:true,let:true,private:true,public:true,yield:true,interface:true,package:true,protected:true,static:true};var E={ES3:S,ESnext:x};var N=getDefaultExportFromCjs(E);function hashCode(t){let n=0;for(let r=0;r<t.length;++r){const o=t.charCodeAt(r);n=(n<<5)-n+o;n|=0}return n}function identifier(t,n){n&&(t+=" "+hashCode(t).toString(36));const r=t.trim().replace(/\W+/g,"_");return N.ES3[r]||N.ESnext[r]||/^\d/.test(r)?"_"+r:r}function property(t,n){if(/^[A-Z_$][0-9A-Z_$]*$/i.test(n)&&!N.ES3[n])return t?t+"."+n:n;{const r=JSON.stringify(n);return t?t+"["+r+"]":r}}var O=["ar","ckb","fa","he","ks($|[^bfh])","lrc","mzn","pa-Arab","ps","ug","ur","uz-Arab","yi"];var F=new RegExp("^"+O.join("|^"));function biDiMarkText(t,n){var r=F.test(n);var o=JSON.stringify(r?"‏":"‎");return"".concat(o," + ").concat(t," + ").concat(o)}var P="@messageformat/runtime";var _="@messageformat/runtime/lib/cardinals";var T="@messageformat/runtime/lib/plurals";var j="@messageformat/runtime/lib/formatters";var $=function(){function Compiler(n){(this||t).arguments=[];(this||t).runtime={};(this||t).options=n}Compiler.prototype.compile=function(n,r,o){var s,i;var l=this||t;var u=(this||t).options,h=u.localeCodeFromKey,m=u.requireAllArguments,g=u.strict,y=u.strictPluralKeys;if(typeof n==="object"){var w={};try{for(var v=__values(Object.keys(n)),k=v.next();!k.done;k=v.next()){var S=k.value;var x=h?h(S):S;var E=o&&x&&o[x]||r;w[S]=this.compile(n[S],E,o)}}catch(t){s={error:t}}finally{try{k&&!k.done&&(i=v.return)&&i.call(v)}finally{if(s)throw s.error}}return w}(this||t).plural=r;var N={cardinal:r.cardinals,ordinal:r.ordinals,strict:g,strictPluralKeys:y};(this||t).arguments=[];var O=p(n,N).map((function(t){return l.token(t,null)}));var F=(this||t).arguments.length>0;var P=this.concatenate(O,true);if(m&&F){this.setRuntimeFn("reqArgs");var _=JSON.stringify((this||t).arguments);return"(d) => { reqArgs(".concat(_,", d); return ").concat(P,"; }")}return"(".concat(F?"d":"",") => ").concat(P)};Compiler.prototype.cases=function(n,r){var o=this||t;var s=true;var i=n.cases.map((function(t){var n=t.key,i=t.tokens;n==="other"&&(s=false);var l=i.map((function(t){return o.token(t,r)}));return"".concat(property(null,n.replace(/^=/,"")),": ").concat(o.concatenate(l,false))}));if(s){var l=n.type;var u=(this||t).plural,h=u.cardinals,p=u.ordinals;if(l==="select"||l==="plural"&&h.includes("other")||l==="selectordinal"&&p.includes("other"))throw new Error("No 'other' form found in ".concat(JSON.stringify(n)))}return"{ ".concat(i.join(", ")," }")};Compiler.prototype.concatenate=function(n,r){var o=(this||t).options.returnType==="values";return o&&(r||n.length>1)?"["+n.join(", ")+"]":n.join(" + ")||'""'};Compiler.prototype.token=function(n,r){if(n.type==="content")return JSON.stringify(n.value);var o=(this||t).plural,s=o.id,i=o.lc;var l,u;if("arg"in n){(this||t).arguments.push(n.arg);l=[property("d",n.arg)]}else l=[];switch(n.type){case"argument":return(this||t).options.biDiSupport?biDiMarkText(String(l[0]),i):String(l[0]);case"select":u="select";r&&(this||t).options.strict&&(r=null);l.push(this.cases(n,r));this.setRuntimeFn("select");break;case"selectordinal":u="plural";l.push(n.pluralOffset||0,s,this.cases(n,n),1);this.setLocale(s,true);this.setRuntimeFn("plural");break;case"plural":u="plural";l.push(n.pluralOffset||0,s,this.cases(n,n));this.setLocale(s,false);this.setRuntimeFn("plural");break;case"function":var h=(this||t).options.customFormatters[n.key];var p=h&&"module"in h&&typeof h.module==="function";if(!h){if(n.key==="date"){u=this.setDateFormatter(n,l,r);break}if(n.key==="number"){u=this.setNumberFormatter(n,l,r);break}}l.push(JSON.stringify((this||t).plural.locale));if(n.param){r&&(this||t).options.strict&&(r=null);var m=this.getFormatterArg(n,r);m&&l.push(m)}u=p?identifier("".concat(n.key,"__").concat((this||t).plural.locale)):n.key;this.setFormatter(u,n.key);break;case"octothorpe":if(!r)return'"#"';l=[JSON.stringify((this||t).plural.locale),property("d",r.arg),r.pluralOffset||0];if((this||t).options.strict){u="strictNumber";l.push(JSON.stringify(r.arg));this.setRuntimeFn("strictNumber")}else{u="number";this.setRuntimeFn("number")}break}if(!u)throw new Error("Parser error for token "+JSON.stringify(n));return"".concat(u,"(").concat(l.join(", "),")")};Compiler.prototype.runtimeIncludes=function(n,r){if(identifier(n)!==n)throw new SyntaxError("Reserved word used as ".concat(r," identifier: ").concat(n));var o=(this||t).runtime[n];if(!o||o.type===r)return o;throw new TypeError("Cannot override ".concat(o.type," runtime function as ").concat(r,": ").concat(n))};Compiler.prototype.setLocale=function(n,r){var o=this.runtimeIncludes(n,"locale");var s=(this||t).plural,i=s.getCardinal,l=s.getPlural,u=s.isDefault;var h,p,m;if(!r&&u&&i){if(o)return;h=function(t){return i(t)};p=_;m=function(){return String(i)}}else{if(o&&(!u||o.module===T))return;h=function(t,n){return l(t,n)};p=u?T:l.module||null;m=function(){return String(l)}}(this||t).runtime[n]=Object.assign(h,{id:n,module:p,toString:m,type:"locale"})};Compiler.prototype.setRuntimeFn=function(n){this.runtimeIncludes(n,"runtime")||((this||t).runtime[n]=Object.assign(w[n],{id:n,module:P,type:"runtime"}))};Compiler.prototype.getFormatterArg=function(n,r){var o,s,i,l;var u=this||t;var h=n.key,p=n.param;var m=(this||t).options.customFormatters[h]||isFormatterKey(h)&&k[h];if(!m||!p)return null;var g="arg"in m&&m.arg||"string";if(g==="options"){var y="";try{for(var w=__values(p),v=w.next();!v.done;v=w.next()){var S=v.value;if(S.type!=="content")throw new SyntaxError("Expected literal options for ".concat(h," formatter"));y+=S.value}}catch(t){o={error:t}}finally{try{v&&!v.done&&(s=w.return)&&s.call(w)}finally{if(o)throw o.error}}var x={};try{for(var E=__values(y.split(",")),N=E.next();!N.done;N=E.next()){var O=N.value;var F=O.indexOf(":");if(F===-1)x[O.trim()]=null;else{var P=O.substring(0,F).trim();var _=O.substring(F+1).trim();if(_==="true")x[P]=true;else if(_==="false")x[P]=false;else if(_==="null")x[P]=null;else{var T=Number(_);x[P]=Number.isFinite(T)?T:_}}}}catch(t){i={error:t}}finally{try{N&&!N.done&&(l=E.return)&&l.call(E)}finally{if(i)throw i.error}}return JSON.stringify(x)}var j=p.map((function(t){return u.token(t,r)}));if(g==="raw")return"[".concat(j.join(", "),"]");var $=j.join(" + ");return $?"(".concat($,").trim()"):'""'};Compiler.prototype.setFormatter=function(n,r){if(!this.runtimeIncludes(n,"formatter")){var o=(this||t).options.customFormatters[r||n];if(o){var s=typeof o==="function"?{formatter:o}:o;(this||t).runtime[n]=Object.assign(s.formatter.bind({}),__assign(__assign({},s.formatter.prototype),{toString:function(){return String(s.formatter)}}),{type:"formatter"},"module"in o&&o.module&&o.id?{id:identifier(o.id),module:typeof o.module==="function"?o.module((this||t).plural.locale):o.module}:{id:null,module:null})}else{if(!isFormatterKey(n))throw new Error("Formatting function not found: ".concat(n));(this||t).runtime[n]=Object.assign(k[n],{type:"formatter"},{id:n,module:j})}}};Compiler.prototype.setDateFormatter=function(n,r,o){var s=this||t;var i=n.param;var l=(this||t).plural.locale;var u=i&&i.length===1&&i[0];if(u&&u.type==="content"&&/^\s*::/.test(u.value)){var h=u.value.trim().substr(2);var p=identifier("date_".concat(l,"_").concat(h),true);if(!this.runtimeIncludes(p,"formatter")){var m=getDateFormatter(l,h,(this||t).options.timeZone);(this||t).runtime[p]=Object.assign(m,{id:p,module:null,toString:function(){return getDateFormatterSource(l,h,s.options.timeZone)},type:"formatter"})}return p}r.push(JSON.stringify(l));if(i&&i.length>0){o&&(this||t).options.strict&&(o=null);var g=i.map((function(t){return s.token(t,o)}));r.push("("+(g.join(" + ")||'""')+").trim()")}this.setFormatter("date");return"date"};Compiler.prototype.setNumberFormatter=function(n,r,o){var s=this||t;var i=n.param;var l=(this||t).plural.locale;if(!i||i.length===0){r.unshift(JSON.stringify(l));r.push("0");this.setRuntimeFn("number");return"number"}r.push(JSON.stringify(l));if(i.length===1&&i[0].type==="content"){var u=i[0].value.trim();switch(u){case"currency":r.push(JSON.stringify((this||t).options.currency));this.setFormatter("numberCurrency");return"numberCurrency";case"integer":this.setFormatter("numberInteger");return"numberInteger";case"percent":this.setFormatter("numberPercent");return"numberPercent"}var h=u.match(/^currency:([A-Z]+)$/);if(h){r.push(JSON.stringify(h[1]));this.setFormatter("numberCurrency");return"numberCurrency"}var p=identifier("number_".concat(l,"_").concat(u),true);if(!this.runtimeIncludes(p,"formatter")){var m=(this||t).options.currency;var g=getNumberFormatter(l,u,m);(this||t).runtime[p]=Object.assign(g,{id:null,module:null,toString:function(){return getNumberFormatterSource(l,u,m)},type:"formatter"})}return p}o&&(this||t).options.strict&&(o=null);var y=i.map((function(t){return s.token(t,o)}));r.push("("+(y.join(" + ")||'""')+").trim()");r.push(JSON.stringify((this||t).options.currency));this.setFormatter("numberFmt");return"numberFmt"};return Compiler}();function isFormatterKey(t){return t in k}const a$2=t=>t==1?"one":"other";const b$2=t=>t==0||t==1?"one":"other";const c$2=t=>t>=0&&t<=1?"one":"other";const d$2=t=>{const n=String(t).split("."),r=!n[1];return t==1&&r?"one":"other"};const e$1=t=>"other";const f$2=t=>t==1?"one":t==2?"two":"other";const D=a$2;const A=b$2;const z=c$2;const M=a$2;const ar$2=t=>{const n=String(t).split("."),r=Number(n[0])==t,o=r&&n[0].slice(-2);return t==0?"zero":t==1?"one":t==2?"two":o>=3&&o<=10?"few":o>=11&&o<=99?"many":"other"};const ars$2=t=>{const n=String(t).split("."),r=Number(n[0])==t,o=r&&n[0].slice(-2);return t==0?"zero":t==1?"one":t==2?"two":o>=3&&o<=10?"few":o>=11&&o<=99?"many":"other"};const q=c$2;const R=a$2;const B=d$2;const I=a$2;const C=a$2;const be$2=t=>{const n=String(t).split("."),r=Number(n[0])==t,o=r&&n[0].slice(-1),s=r&&n[0].slice(-2);return o==1&&s!=11?"one":o>=2&&o<=4&&(s<12||s>14)?"few":r&&o==0||o>=5&&o<=9||s>=11&&s<=14?"many":"other"};const U=a$2;const W=a$2;const Z=a$2;const J=b$2;const L=e$1;const G=c$2;const K=e$1;const br$2=t=>{const n=String(t).split("."),r=Number(n[0])==t,o=r&&n[0].slice(-1),s=r&&n[0].slice(-2),i=r&&n[0].slice(-6);return o==1&&s!=11&&s!=71&&s!=91?"one":o==2&&s!=12&&s!=72&&s!=92?"two":(o==3||o==4||o==9)&&(s<10||s>19)&&(s<70||s>79)&&(s<90||s>99)?"few":t!=0&&r&&i==0?"many":"other"};const H=a$2;const bs$2=t=>{const n=String(t).split("."),r=n[0],o=n[1]||"",s=!n[1],i=r.slice(-1),l=r.slice(-2),u=o.slice(-1),h=o.slice(-2);return s&&i==1&&l!=11||u==1&&h!=11?"one":s&&i>=2&&i<=4&&(l<12||l>14)||u>=2&&u<=4&&(h<12||h>14)?"few":"other"};const ca$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-6);return t==1&&o?"one":r!=0&&s==0&&o?"many":"other"};const V=a$2;const ceb$2=t=>{const n=String(t).split("."),r=n[0],o=n[1]||"",s=!n[1],i=r.slice(-1),l=o.slice(-1);return s&&(r==1||r==2||r==3)||s&&i!=4&&i!=6&&i!=9||!s&&l!=4&&l!=6&&l!=9?"one":"other"};const Y=a$2;const Q=a$2;const X=a$2;const cs$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1];return t==1&&o?"one":r>=2&&r<=4&&o?"few":o?"other":"many"};const cy$2=t=>t==0?"zero":t==1?"one":t==2?"two":t==3?"few":t==6?"many":"other";const da$2=t=>{const n=String(t).split("."),r=n[0],o=Number(n[0])==t;return t!=1&&(o||r!=0&&r!=1)?"other":"one"};const tt=d$2;const et=c$2;const dsb$2=t=>{const n=String(t).split("."),r=n[0],o=n[1]||"",s=!n[1],i=r.slice(-2),l=o.slice(-2);return s&&i==1||l==1?"one":s&&i==2||l==2?"two":s&&(i==3||i==4)||l==3||l==4?"few":"other"};const nt=a$2;const rt=e$1;const ot=a$2;const st=a$2;const ct=d$2;const at=a$2;const es$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-6);return t==1?"one":r!=0&&s==0&&o?"many":"other"};const ut=d$2;const ht=a$2;const ft=c$2;const ff$2=t=>t>=0&&t<2?"one":"other";const dt=d$2;const fil$2=t=>{const n=String(t).split("."),r=n[0],o=n[1]||"",s=!n[1],i=r.slice(-1),l=o.slice(-1);return s&&(r==1||r==2||r==3)||s&&i!=4&&i!=6&&i!=9||!s&&l!=4&&l!=6&&l!=9?"one":"other"};const gt=a$2;const fr$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-6);return t>=0&&t<2?"one":r!=0&&s==0&&o?"many":"other"};const yt=a$2;const wt=d$2;const ga$2=t=>{const n=String(t).split("."),r=Number(n[0])==t;return t==1?"one":t==2?"two":r&&t>=3&&t<=6?"few":r&&t>=7&&t<=10?"many":"other"};const gd$2=t=>{const n=String(t).split("."),r=Number(n[0])==t;return t==1||t==11?"one":t==2||t==12?"two":r&&t>=3&&t<=10||r&&t>=13&&t<=19?"few":"other"};const bt=d$2;const vt=a$2;const kt=c$2;const St=b$2;const gv$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-1),i=r.slice(-2);return o&&s==1?"one":o&&s==2?"two":!o||i!=0&&i!=20&&i!=40&&i!=60&&i!=80?o?"other":"many":"few"};const xt=a$2;const Et=a$2;const he$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1];return r==1&&o||r==0&&!o?"one":r==2&&o?"two":"other"};const Nt=c$2;const Ot=e$1;const hr$2=t=>{const n=String(t).split("."),r=n[0],o=n[1]||"",s=!n[1],i=r.slice(-1),l=r.slice(-2),u=o.slice(-1),h=o.slice(-2);return s&&i==1&&l!=11||u==1&&h!=11?"one":s&&i>=2&&i<=4&&(l<12||l>14)||u>=2&&u<=4&&(h<12||h>14)?"few":"other"};const hsb$2=t=>{const n=String(t).split("."),r=n[0],o=n[1]||"",s=!n[1],i=r.slice(-2),l=o.slice(-2);return s&&i==1||l==1?"one":s&&i==2||l==2?"two":s&&(i==3||i==4)||l==3||l==4?"few":"other"};const Ft=a$2;const hy$2=t=>t>=0&&t<2?"one":"other";const Pt=d$2;const _t=e$1;const Tt=e$1;const jt=e$1;const $t=d$2;const is$2=t=>{const n=String(t).split("."),r=n[0],o=(n[1]||"").replace(/0+$/,""),s=Number(n[0])==t,i=r.slice(-1),l=r.slice(-2);return s&&i==1&&l!=11||o%10==1&&o%100!=11?"one":"other"};const it$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-6);return t==1&&o?"one":r!=0&&s==0&&o?"many":"other"};const Dt=f$2;const At=e$1;const zt=e$1;const Mt=a$2;const qt=a$2;const Rt=e$1;const Bt=e$1;const It=a$2;const kab$2=t=>t>=0&&t<2?"one":"other";const Ct=a$2;const Ut=a$2;const Wt=e$1;const Zt=e$1;const Jt=a$2;const Lt=a$2;const Gt=a$2;const Kt=e$1;const Ht=c$2;const Vt=e$1;const Yt=a$2;const Qt=a$2;const ksh$2=t=>t==0?"zero":t==1?"one":"other";const Xt=a$2;const kw$2=t=>{const n=String(t).split("."),r=Number(n[0])==t,o=r&&n[0].slice(-2),s=r&&n[0].slice(-3),i=r&&n[0].slice(-5),l=r&&n[0].slice(-6);return t==0?"zero":t==1?"one":o==2||o==22||o==42||o==62||o==82||r&&s==0&&(i>=1e3&&i<=2e4||i==4e4||i==6e4||i==8e4)||t!=0&&l==1e5?"two":o==3||o==23||o==43||o==63||o==83?"few":t==1||o!=1&&o!=21&&o!=41&&o!=61&&o!=81?"other":"many"};const te=a$2;const lag$2=t=>{const n=String(t).split("."),r=n[0];return t==0?"zero":r!=0&&r!=1||t==0?"other":"one"};const ee=a$2;const re=a$2;const oe=d$2;const se=e$1;const ie=b$2;const ce=e$1;const lt$2=t=>{const n=String(t).split("."),r=n[1]||"",o=Number(n[0])==t,s=o&&n[0].slice(-1),i=o&&n[0].slice(-2);return s==1&&(i<11||i>19)?"one":s>=2&&s<=9&&(i<11||i>19)?"few":r!=0?"many":"other"};const lv$2=t=>{const n=String(t).split("."),r=n[1]||"",o=r.length,s=Number(n[0])==t,i=s&&n[0].slice(-1),l=s&&n[0].slice(-2),u=r.slice(-2),h=r.slice(-1);return s&&i==0||l>=11&&l<=19||o==2&&u>=11&&u<=19?"zero":i==1&&l!=11||o==2&&h==1&&u!=11||o!=2&&h==1?"one":"other"};const ae=a$2;const le=b$2;const ue=a$2;const mk$2=t=>{const n=String(t).split("."),r=n[0],o=n[1]||"",s=!n[1],i=r.slice(-1),l=r.slice(-2),u=o.slice(-1),h=o.slice(-2);return s&&i==1&&l!=11||u==1&&h!=11?"one":"other"};const fe=a$2;const pe=a$2;const mo$2=t=>{const n=String(t).split("."),r=!n[1],o=Number(n[0])==t,s=o&&n[0].slice(-2);return t==1&&r?"one":!r||t==0||t!=1&&s>=1&&s<=19?"few":"other"};const de=a$2;const me=e$1;const mt$2=t=>{const n=String(t).split("."),r=Number(n[0])==t,o=r&&n[0].slice(-2);return t==1?"one":t==2?"two":t==0||o>=3&&o<=10?"few":o>=11&&o<=19?"many":"other"};const ge=e$1;const ye=a$2;const we=f$2;const ve=a$2;const ke=a$2;const Se=a$2;const xe=d$2;const Ee=a$2;const Ne=a$2;const Oe=a$2;const Fe=e$1;const Pe=a$2;const _e=b$2;const Te=a$2;const je=a$2;const $e=a$2;const De=a$2;const Ae=a$2;const ze=e$1;const Me=b$2;const qe=a$2;const Re=c$2;const pl$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-1),i=r.slice(-2);return t==1&&o?"one":o&&s>=2&&s<=4&&(i<12||i>14)?"few":o&&r!=1&&(s==0||s==1)||o&&s>=5&&s<=9||o&&i>=12&&i<=14?"many":"other"};const prg$2=t=>{const n=String(t).split("."),r=n[1]||"",o=r.length,s=Number(n[0])==t,i=s&&n[0].slice(-1),l=s&&n[0].slice(-2),u=r.slice(-2),h=r.slice(-1);return s&&i==0||l>=11&&l<=19||o==2&&u>=11&&u<=19?"zero":i==1&&l!=11||o==2&&h==1&&u!=11||o!=2&&h==1?"one":"other"};const Be=a$2;const pt$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-6);return r==0||r==1?"one":r!=0&&s==0&&o?"many":"other"};const pt_PT$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-6);return t==1&&o?"one":r!=0&&s==0&&o?"many":"other"};const Ie=a$2;const ro$2=t=>{const n=String(t).split("."),r=!n[1],o=Number(n[0])==t,s=o&&n[0].slice(-2);return t==1&&r?"one":!r||t==0||t!=1&&s>=1&&s<=19?"few":"other"};const Ce=a$2;const ru$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-1),i=r.slice(-2);return o&&s==1&&i!=11?"one":o&&s>=2&&s<=4&&(i<12||i>14)?"few":o&&s==0||o&&s>=5&&s<=9||o&&i>=11&&i<=14?"many":"other"};const Ue=a$2;const We=e$1;const Ze=a$2;const Je=f$2;const Le=d$2;const Ge=d$2;const Ke=a$2;const He=a$2;const Ve=f$2;const Ye=a$2;const Qe=e$1;const Xe=e$1;const sh$2=t=>{const n=String(t).split("."),r=n[0],o=n[1]||"",s=!n[1],i=r.slice(-1),l=r.slice(-2),u=o.slice(-1),h=o.slice(-2);return s&&i==1&&l!=11||u==1&&h!=11?"one":s&&i>=2&&i<=4&&(l<12||l>14)||u>=2&&u<=4&&(h<12||h>14)?"few":"other"};const shi$2=t=>{const n=String(t).split("."),r=Number(n[0])==t;return t>=0&&t<=1?"one":r&&t>=2&&t<=10?"few":"other"};const si$2=t=>{const n=String(t).split("."),r=n[0],o=n[1]||"";return t==0||t==1||r==0&&o==1?"one":"other"};const sk$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1];return t==1&&o?"one":r>=2&&r<=4&&o?"few":o?"other":"many"};const sl$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-2);return o&&s==1?"one":o&&s==2?"two":o&&(s==3||s==4)||!o?"few":"other"};const tn=f$2;const nn=f$2;const rn=f$2;const on=f$2;const sn=f$2;const cn=a$2;const an=a$2;const ln=a$2;const sr$2=t=>{const n=String(t).split("."),r=n[0],o=n[1]||"",s=!n[1],i=r.slice(-1),l=r.slice(-2),u=o.slice(-1),h=o.slice(-2);return s&&i==1&&l!=11||u==1&&h!=11?"one":s&&i>=2&&i<=4&&(l<12||l>14)||u>=2&&u<=4&&(h<12||h>14)?"few":"other"};const un=a$2;const hn=a$2;const fn=a$2;const pn=e$1;const dn=d$2;const mn=d$2;const gn=a$2;const yn=a$2;const wn=a$2;const vn=a$2;const kn=e$1;const Sn=b$2;const xn=a$2;const En=a$2;const tl$2=t=>{const n=String(t).split("."),r=n[0],o=n[1]||"",s=!n[1],i=r.slice(-1),l=o.slice(-1);return s&&(r==1||r==2||r==3)||s&&i!=4&&i!=6&&i!=9||!s&&l!=4&&l!=6&&l!=9?"one":"other"};const Nn=a$2;const On=e$1;const Fn=e$1;const Pn=a$2;const _n=a$2;const tzm$2=t=>{const n=String(t).split("."),r=Number(n[0])==t;return t==0||t==1||r&&t>=11&&t<=99?"one":"other"};const Tn=a$2;const uk$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-1),i=r.slice(-2);return o&&s==1&&i!=11?"one":o&&s>=2&&s<=4&&(i<12||i>14)?"few":o&&s==0||o&&s>=5&&s<=9||o&&i>=11&&i<=14?"many":"other"};const jn=e$1;const $n=d$2;const Dn=a$2;const An=a$2;const vec$2=t=>{const n=String(t).split("."),r=n[0],o=!n[1],s=r.slice(-6);return t==1&&o?"one":r!=0&&s==0&&o?"many":"other"};const zn=e$1;const Mn=a$2;const qn=a$2;const Rn=b$2;const Bn=a$2;const In=e$1;const Cn=a$2;const Un=a$2;const Wn=d$2;const Zn=e$1;const Jn=e$1;const Ln=e$1;const Gn=c$2;var Kn=Object.freeze({__proto__:null,af:D,ak:A,am:z,an:M,ar:ar$2,ars:ars$2,as:q,asa:R,ast:B,az:I,bal:C,be:be$2,bem:U,bez:W,bg:Z,bho:J,bm:L,bn:G,bo:K,br:br$2,brx:H,bs:bs$2,ca:ca$2,ce:V,ceb:ceb$2,cgg:Y,chr:Q,ckb:X,cs:cs$2,cy:cy$2,da:da$2,de:tt,doi:et,dsb:dsb$2,dv:nt,dz:rt,ee:ot,el:st,en:ct,eo:at,es:es$2,et:ut,eu:ht,fa:ft,ff:ff$2,fi:dt,fil:fil$2,fo:gt,fr:fr$2,fur:yt,fy:wt,ga:ga$2,gd:gd$2,gl:bt,gsw:vt,gu:kt,guw:St,gv:gv$2,ha:xt,haw:Et,he:he$2,hi:Nt,hnj:Ot,hr:hr$2,hsb:hsb$2,hu:Ft,hy:hy$2,ia:Pt,id:_t,ig:Tt,ii:jt,io:$t,is:is$2,it:it$2,iu:Dt,ja:At,jbo:zt,jgo:Mt,jmc:qt,jv:Rt,jw:Bt,ka:It,kab:kab$2,kaj:Ct,kcg:Ut,kde:Wt,kea:Zt,kk:Jt,kkj:Lt,kl:Gt,km:Kt,kn:Ht,ko:Vt,ks:Yt,ksb:Qt,ksh:ksh$2,ku:Xt,kw:kw$2,ky:te,lag:lag$2,lb:ee,lg:re,lij:oe,lkt:se,ln:ie,lo:ce,lt:lt$2,lv:lv$2,mas:ae,mg:le,mgo:ue,mk:mk$2,ml:fe,mn:pe,mo:mo$2,mr:de,ms:me,mt:mt$2,my:ge,nah:ye,naq:we,nb:ve,nd:ke,ne:Se,nl:xe,nn:Ee,nnh:Ne,no:Oe,nqo:Fe,nr:Pe,nso:_e,ny:Te,nyn:je,om:$e,or:De,os:Ae,osa:ze,pa:Me,pap:qe,pcm:Re,pl:pl$2,prg:prg$2,ps:Be,pt:pt$2,pt_PT:pt_PT$2,rm:Ie,ro:ro$2,rof:Ce,ru:ru$2,rwk:Ue,sah:We,saq:Ze,sat:Je,sc:Le,scn:Ge,sd:Ke,sdh:He,se:Ve,seh:Ye,ses:Qe,sg:Xe,sh:sh$2,shi:shi$2,si:si$2,sk:sk$2,sl:sl$2,sma:tn,smi:nn,smj:rn,smn:on,sms:sn,sn:cn,so:an,sq:ln,sr:sr$2,ss:un,ssy:hn,st:fn,su:pn,sv:dn,sw:mn,syr:gn,ta:yn,te:wn,teo:vn,th:kn,ti:Sn,tig:xn,tk:En,tl:tl$2,tn:Nn,to:On,tpi:Fn,tr:Pn,ts:_n,tzm:tzm$2,ug:Tn,uk:uk$2,und:jn,ur:$n,uz:Dn,ve:An,vec:vec$2,vi:zn,vo:Mn,vun:qn,wa:Rn,wae:Bn,wo:In,xh:Cn,xog:Un,yi:Wn,yo:Zn,yue:Jn,zh:Ln,zu:Gn});const Hn="zero",Vn="one",Yn="two",Qn="few",Xn="many",tr="other";const er={cardinal:[Vn,tr],ordinal:[tr]};const nr={cardinal:[Vn,tr],ordinal:[Vn,tr]};const rr={cardinal:[tr],ordinal:[tr]};const ir={cardinal:[Vn,Yn,tr],ordinal:[tr]};const cr=er;const lr=er;const ur=er;const pr=er;const dr={cardinal:[Hn,Vn,Yn,Qn,Xn,tr],ordinal:[tr]};const gr={cardinal:[Hn,Vn,Yn,Qn,Xn,tr],ordinal:[tr]};const yr={cardinal:[Vn,tr],ordinal:[Vn,Yn,Qn,Xn,tr]};const wr=er;const vr=er;const kr={cardinal:[Vn,tr],ordinal:[Vn,Qn,Xn,tr]};const Sr=nr;const xr={cardinal:[Vn,Qn,Xn,tr],ordinal:[Qn,tr]};const Er=er;const Nr=er;const Or=er;const Fr=er;const Pr=rr;const _r={cardinal:[Vn,tr],ordinal:[Vn,Yn,Qn,Xn,tr]};const Tr=rr;const jr={cardinal:[Vn,Yn,Qn,Xn,tr],ordinal:[tr]};const $r=er;const Dr={cardinal:[Vn,Qn,tr],ordinal:[tr]};const Ar={cardinal:[Vn,Xn,tr],ordinal:[Vn,Yn,Qn,tr]};const zr=er;const Mr=er;const qr=er;const Rr=er;const Br=er;const Ir={cardinal:[Vn,Qn,Xn,tr],ordinal:[tr]};const Cr={cardinal:[Hn,Vn,Yn,Qn,Xn,tr],ordinal:[Hn,Vn,Yn,Qn,Xn,tr]};const Ur=er;const Wr=er;const Zr=er;const Jr={cardinal:[Vn,Yn,Qn,tr],ordinal:[tr]};const Lr=er;const Gr=rr;const Kr=er;const Hr=er;const Vr={cardinal:[Vn,tr],ordinal:[Vn,Yn,Qn,tr]};const Yr=er;const Qr={cardinal:[Vn,Xn,tr],ordinal:[tr]};const Xr=er;const to=er;const eo=er;const no=er;const oo=er;const so=nr;const io=er;const co={cardinal:[Vn,Xn,tr],ordinal:[Vn,tr]};const ao=er;const uo=er;const ho={cardinal:[Vn,Yn,Qn,Xn,tr],ordinal:[Vn,tr]};const fo={cardinal:[Vn,Yn,Qn,tr],ordinal:[Vn,Yn,Qn,tr]};const po=er;const go=er;const yo={cardinal:[Vn,tr],ordinal:[Vn,Yn,Qn,Xn,tr]};const wo=er;const bo={cardinal:[Vn,Yn,Qn,Xn,tr],ordinal:[tr]};const vo=er;const ko=er;const So=ir;const xo={cardinal:[Vn,tr],ordinal:[Vn,Yn,Qn,Xn,tr]};const Eo=rr;const No={cardinal:[Vn,Qn,tr],ordinal:[tr]};const Oo={cardinal:[Vn,Yn,Qn,tr],ordinal:[tr]};const Fo=nr;const Po=nr;const _o=er;const To=rr;const jo=rr;const $o=rr;const Do=er;const Ao=er;const zo={cardinal:[Vn,Xn,tr],ordinal:[Xn,tr]};const Mo=ir;const qo=rr;const Ro=rr;const Bo=er;const Io=er;const Co=rr;const Uo=rr;const Wo={cardinal:[Vn,tr],ordinal:[Vn,Xn,tr]};const Zo=er;const Jo=er;const Lo=er;const Go=rr;const Ko=rr;const Ho={cardinal:[Vn,tr],ordinal:[Xn,tr]};const Vo=er;const Yo=er;const Qo=rr;const Xo=er;const ts=rr;const ns=er;const rs=er;const os={cardinal:[Hn,Vn,tr],ordinal:[tr]};const ss=er;const ls={cardinal:[Hn,Vn,Yn,Qn,Xn,tr],ordinal:[Vn,Xn,tr]};const us=er;const hs={cardinal:[Hn,Vn,tr],ordinal:[tr]};const fs=er;const ps=er;const ds={cardinal:[Vn,tr],ordinal:[Xn,tr]};const gs=rr;const ys=er;const ws={cardinal:[tr],ordinal:[Vn,tr]};const vs={cardinal:[Vn,Qn,Xn,tr],ordinal:[tr]};const ks={cardinal:[Hn,Vn,tr],ordinal:[tr]};const Ss=er;const xs=er;const Es=er;const Ns={cardinal:[Vn,tr],ordinal:[Vn,Yn,Xn,tr]};const Os=er;const Fs=er;const Ps={cardinal:[Vn,Qn,tr],ordinal:[Vn,tr]};const _s={cardinal:[Vn,tr],ordinal:[Vn,Yn,Qn,tr]};const Ts={cardinal:[tr],ordinal:[Vn,tr]};const js={cardinal:[Vn,Yn,Qn,Xn,tr],ordinal:[tr]};const $s=rr;const Ds=er;const As=ir;const zs=er;const Ms=er;const qs=nr;const Rs=er;const Bs=er;const Is=er;const Cs=er;const Us=rr;const Ws=er;const Zs=er;const Js=er;const Ls=er;const Gs=er;const Ks={cardinal:[Vn,tr],ordinal:[Vn,Yn,Qn,Xn,tr]};const Hs=er;const Vs=rr;const Ys=er;const Qs=er;const Xs=er;const ti={cardinal:[Vn,Qn,Xn,tr],ordinal:[tr]};const ei={cardinal:[Hn,Vn,tr],ordinal:[tr]};const ni=er;const ri={cardinal:[Vn,Xn,tr],ordinal:[tr]};const oi={cardinal:[Vn,Xn,tr],ordinal:[tr]};const ii=er;const ci={cardinal:[Vn,Qn,tr],ordinal:[Vn,tr]};const ai=er;const li={cardinal:[Vn,Qn,Xn,tr],ordinal:[tr]};const ui=er;const fi=rr;const pi=er;const di=ir;const mi={cardinal:[Vn,tr],ordinal:[Xn,tr]};const gi={cardinal:[Vn,tr],ordinal:[Xn,tr]};const yi=er;const wi=er;const bi=ir;const ki=er;const Si=rr;const xi=rr;const Ei={cardinal:[Vn,Qn,tr],ordinal:[tr]};const Ni={cardinal:[Vn,Qn,tr],ordinal:[tr]};const Oi=er;const Fi={cardinal:[Vn,Qn,Xn,tr],ordinal:[tr]};const Pi={cardinal:[Vn,Yn,Qn,tr],ordinal:[tr]};const _i=ir;const Ti=ir;const ji=ir;const $i=ir;const Di=ir;const Ai=er;const zi=er;const Mi={cardinal:[Vn,tr],ordinal:[Vn,Xn,tr]};const qi={cardinal:[Vn,Qn,tr],ordinal:[tr]};const Ri=er;const Bi=er;const Ii=er;const Ci=rr;const Ui=nr;const Wi=er;const Zi=er;const Ji=er;const Li=er;const Gi=er;const Ki=rr;const Hi=er;const Vi=er;const Yi={cardinal:[Vn,tr],ordinal:[Qn,tr]};const Qi=nr;const Xi=er;const tc=rr;const ec=rr;const nc=er;const rc=er;const oc=er;const ic=er;const cc={cardinal:[Vn,Qn,Xn,tr],ordinal:[Qn,tr]};const ac=rr;const lc=er;const uc=er;const hc=er;const fc={cardinal:[Vn,Xn,tr],ordinal:[Xn,tr]};const pc={cardinal:[tr],ordinal:[Vn,tr]};const dc=er;const mc=er;const gc=er;const yc=er;const wc=rr;const bc=er;const vc=er;const kc=er;const Sc=rr;const xc=rr;const Ec=rr;const Nc=er;var Oc=Object.freeze({__proto__:null,af:cr,ak:lr,am:ur,an:pr,ar:dr,ars:gr,as:yr,asa:wr,ast:vr,az:kr,bal:Sr,be:xr,bem:Er,bez:Nr,bg:Or,bho:Fr,bm:Pr,bn:_r,bo:Tr,br:jr,brx:$r,bs:Dr,ca:Ar,ce:zr,ceb:Mr,cgg:qr,chr:Rr,ckb:Br,cs:Ir,cy:Cr,da:Ur,de:Wr,doi:Zr,dsb:Jr,dv:Lr,dz:Gr,ee:Kr,el:Hr,en:Vr,eo:Yr,es:Qr,et:Xr,eu:to,fa:eo,ff:no,fi:oo,fil:so,fo:io,fr:co,fur:ao,fy:uo,ga:ho,gd:fo,gl:po,gsw:go,gu:yo,guw:wo,gv:bo,ha:vo,haw:ko,he:So,hi:xo,hnj:Eo,hr:No,hsb:Oo,hu:Fo,hy:Po,ia:_o,id:To,ig:jo,ii:$o,io:Do,is:Ao,it:zo,iu:Mo,ja:qo,jbo:Ro,jgo:Bo,jmc:Io,jv:Co,jw:Uo,ka:Wo,kab:Zo,kaj:Jo,kcg:Lo,kde:Go,kea:Ko,kk:Ho,kkj:Vo,kl:Yo,km:Qo,kn:Xo,ko:ts,ks:ns,ksb:rs,ksh:os,ku:ss,kw:ls,ky:us,lag:hs,lb:fs,lg:ps,lij:ds,lkt:gs,ln:ys,lo:ws,lt:vs,lv:ks,mas:Ss,mg:xs,mgo:Es,mk:Ns,ml:Os,mn:Fs,mo:Ps,mr:_s,ms:Ts,mt:js,my:$s,nah:Ds,naq:As,nb:zs,nd:Ms,ne:qs,nl:Rs,nn:Bs,nnh:Is,no:Cs,nqo:Us,nr:Ws,nso:Zs,ny:Js,nyn:Ls,om:Gs,or:Ks,os:Hs,osa:Vs,pa:Ys,pap:Qs,pcm:Xs,pl:ti,prg:ei,ps:ni,pt:ri,pt_PT:oi,rm:ii,ro:ci,rof:ai,ru:li,rwk:ui,sah:fi,saq:pi,sat:di,sc:mi,scn:gi,sd:yi,sdh:wi,se:bi,seh:ki,ses:Si,sg:xi,sh:Ei,shi:Ni,si:Oi,sk:Fi,sl:Pi,sma:_i,smi:Ti,smj:ji,smn:$i,sms:Di,sn:Ai,so:zi,sq:Mi,sr:qi,ss:Ri,ssy:Bi,st:Ii,su:Ci,sv:Ui,sw:Wi,syr:Zi,ta:Ji,te:Li,teo:Gi,th:Ki,ti:Hi,tig:Vi,tk:Yi,tl:Qi,tn:Xi,to:tc,tpi:ec,tr:nc,ts:rc,tzm:oc,ug:ic,uk:cc,und:ac,ur:lc,uz:uc,ve:hc,vec:fc,vi:pc,vo:dc,vun:mc,wa:gc,wae:yc,wo:wc,xh:bc,xog:vc,yi:kc,yo:Sc,yue:xc,zh:Ec,zu:Nc});const a=(t,n)=>n?"other":t==1?"one":"other";const b=(t,n)=>n?"other":t==0||t==1?"one":"other";const c=(t,n)=>n?"other":t>=0&&t<=1?"one":"other";const d=(t,n)=>{const r=String(t).split("."),o=!r[1];return n?"other":t==1&&o?"one":"other"};const e=(t,n)=>"other";const f=(t,n)=>n?"other":t==1?"one":t==2?"two":"other";const Fc=a;const Pc=b;const _c=c;const Tc=a;const ar=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t,s=o&&r[0].slice(-2);return n?"other":t==0?"zero":t==1?"one":t==2?"two":s>=3&&s<=10?"few":s>=11&&s<=99?"many":"other"};const ars=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t,s=o&&r[0].slice(-2);return n?"other":t==0?"zero":t==1?"one":t==2?"two":s>=3&&s<=10?"few":s>=11&&s<=99?"many":"other"};const as=(t,n)=>n?t==1||t==5||t==7||t==8||t==9||t==10?"one":t==2||t==3?"two":t==4?"few":t==6?"many":"other":t>=0&&t<=1?"one":"other";const jc=a;const $c=d;const az=(t,n)=>{const r=String(t).split("."),o=r[0],s=o.slice(-1),i=o.slice(-2),l=o.slice(-3);return n?s==1||s==2||s==5||s==7||s==8||i==20||i==50||i==70||i==80?"one":s==3||s==4||l==100||l==200||l==300||l==400||l==500||l==600||l==700||l==800||l==900?"few":o==0||s==6||i==40||i==60||i==90?"many":"other":t==1?"one":"other"};const bal=(t,n)=>t==1?"one":"other";const be=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t,s=o&&r[0].slice(-1),i=o&&r[0].slice(-2);return n?s!=2&&s!=3||i==12||i==13?"other":"few":s==1&&i!=11?"one":s>=2&&s<=4&&(i<12||i>14)?"few":o&&s==0||s>=5&&s<=9||i>=11&&i<=14?"many":"other"};const Dc=a;const Ac=a;const zc=a;const Mc=b;const qc=e;const bn=(t,n)=>n?t==1||t==5||t==7||t==8||t==9||t==10?"one":t==2||t==3?"two":t==4?"few":t==6?"many":"other":t>=0&&t<=1?"one":"other";const Rc=e;const br=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t,s=o&&r[0].slice(-1),i=o&&r[0].slice(-2),l=o&&r[0].slice(-6);return n?"other":s==1&&i!=11&&i!=71&&i!=91?"one":s==2&&i!=12&&i!=72&&i!=92?"two":(s==3||s==4||s==9)&&(i<10||i>19)&&(i<70||i>79)&&(i<90||i>99)?"few":t!=0&&o&&l==0?"many":"other"};const Bc=a;const bs=(t,n)=>{const r=String(t).split("."),o=r[0],s=r[1]||"",i=!r[1],l=o.slice(-1),u=o.slice(-2),h=s.slice(-1),p=s.slice(-2);return n?"other":i&&l==1&&u!=11||h==1&&p!=11?"one":i&&l>=2&&l<=4&&(u<12||u>14)||h>=2&&h<=4&&(p<12||p>14)?"few":"other"};const ca=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=o.slice(-6);return n?t==1||t==3?"one":t==2?"two":t==4?"few":"other":t==1&&s?"one":o!=0&&i==0&&s?"many":"other"};const Ic=a;const ceb=(t,n)=>{const r=String(t).split("."),o=r[0],s=r[1]||"",i=!r[1],l=o.slice(-1),u=s.slice(-1);return n?"other":i&&(o==1||o==2||o==3)||i&&l!=4&&l!=6&&l!=9||!i&&u!=4&&u!=6&&u!=9?"one":"other"};const Cc=a;const Uc=a;const Wc=a;const cs=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1];return n?"other":t==1&&s?"one":o>=2&&o<=4&&s?"few":s?"other":"many"};const cy=(t,n)=>n?t==0||t==7||t==8||t==9?"zero":t==1?"one":t==2?"two":t==3||t==4?"few":t==5||t==6?"many":"other":t==0?"zero":t==1?"one":t==2?"two":t==3?"few":t==6?"many":"other";const da=(t,n)=>{const r=String(t).split("."),o=r[0],s=Number(r[0])==t;return n||t!=1&&(s||o!=0&&o!=1)?"other":"one"};const Zc=d;const Jc=c;const dsb=(t,n)=>{const r=String(t).split("."),o=r[0],s=r[1]||"",i=!r[1],l=o.slice(-2),u=s.slice(-2);return n?"other":i&&l==1||u==1?"one":i&&l==2||u==2?"two":i&&(l==3||l==4)||u==3||u==4?"few":"other"};const Lc=a;const Gc=e;const Kc=a;const Hc=a;const en=(t,n)=>{const r=String(t).split("."),o=!r[1],s=Number(r[0])==t,i=s&&r[0].slice(-1),l=s&&r[0].slice(-2);return n?i==1&&l!=11?"one":i==2&&l!=12?"two":i==3&&l!=13?"few":"other":t==1&&o?"one":"other"};const Vc=a;const es=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=o.slice(-6);return n?"other":t==1?"one":o!=0&&i==0&&s?"many":"other"};const Yc=d;const Qc=a;const Xc=c;const ff=(t,n)=>n?"other":t>=0&&t<2?"one":"other";const ta=d;const fil=(t,n)=>{const r=String(t).split("."),o=r[0],s=r[1]||"",i=!r[1],l=o.slice(-1),u=s.slice(-1);return n?t==1?"one":"other":i&&(o==1||o==2||o==3)||i&&l!=4&&l!=6&&l!=9||!i&&u!=4&&u!=6&&u!=9?"one":"other"};const ea=a;const fr=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=o.slice(-6);return n?t==1?"one":"other":t>=0&&t<2?"one":o!=0&&i==0&&s?"many":"other"};const na=a;const ra=d;const ga=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t;return n?t==1?"one":"other":t==1?"one":t==2?"two":o&&t>=3&&t<=6?"few":o&&t>=7&&t<=10?"many":"other"};const gd=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t;return n?t==1||t==11?"one":t==2||t==12?"two":t==3||t==13?"few":"other":t==1||t==11?"one":t==2||t==12?"two":o&&t>=3&&t<=10||o&&t>=13&&t<=19?"few":"other"};const oa=d;const sa=a;const gu=(t,n)=>n?t==1?"one":t==2||t==3?"two":t==4?"few":t==6?"many":"other":t>=0&&t<=1?"one":"other";const ia=b;const gv=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=o.slice(-1),l=o.slice(-2);return n?"other":s&&i==1?"one":s&&i==2?"two":!s||l!=0&&l!=20&&l!=40&&l!=60&&l!=80?s?"other":"many":"few"};const aa=a;const la=a;const he=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1];return n?"other":o==1&&s||o==0&&!s?"one":o==2&&s?"two":"other"};const hi=(t,n)=>n?t==1?"one":t==2||t==3?"two":t==4?"few":t==6?"many":"other":t>=0&&t<=1?"one":"other";const ua=e;const hr=(t,n)=>{const r=String(t).split("."),o=r[0],s=r[1]||"",i=!r[1],l=o.slice(-1),u=o.slice(-2),h=s.slice(-1),p=s.slice(-2);return n?"other":i&&l==1&&u!=11||h==1&&p!=11?"one":i&&l>=2&&l<=4&&(u<12||u>14)||h>=2&&h<=4&&(p<12||p>14)?"few":"other"};const hsb=(t,n)=>{const r=String(t).split("."),o=r[0],s=r[1]||"",i=!r[1],l=o.slice(-2),u=s.slice(-2);return n?"other":i&&l==1||u==1?"one":i&&l==2||u==2?"two":i&&(l==3||l==4)||u==3||u==4?"few":"other"};const hu=(t,n)=>n?t==1||t==5?"one":"other":t==1?"one":"other";const hy=(t,n)=>n?t==1?"one":"other":t>=0&&t<2?"one":"other";const ha=d;const fa=e;const pa=e;const ma=e;const ya=d;const is=(t,n)=>{const r=String(t).split("."),o=r[0],s=(r[1]||"").replace(/0+$/,""),i=Number(r[0])==t,l=o.slice(-1),u=o.slice(-2);return n?"other":i&&l==1&&u!=11||s%10==1&&s%100!=11?"one":"other"};const it=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=o.slice(-6);return n?t==11||t==8||t==80||t==800?"many":"other":t==1&&s?"one":o!=0&&i==0&&s?"many":"other"};const wa=f;const ba=e;const va=e;const Sa=a;const xa=a;const Ea=e;const Na=e;const ka=(t,n)=>{const r=String(t).split("."),o=r[0],s=o.slice(-2);return n?o==1?"one":o==0||s>=2&&s<=20||s==40||s==60||s==80?"many":"other":t==1?"one":"other"};const kab=(t,n)=>n?"other":t>=0&&t<2?"one":"other";const Oa=a;const Fa=a;const Pa=e;const _a=e;const kk=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t,s=o&&r[0].slice(-1);return n?s==6||s==9||o&&s==0&&t!=0?"many":"other":t==1?"one":"other"};const Ta=a;const ja=a;const $a=e;const Da=c;const Aa=e;const za=a;const Ma=a;const ksh=(t,n)=>n?"other":t==0?"zero":t==1?"one":"other";const qa=a;const kw=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t,s=o&&r[0].slice(-2),i=o&&r[0].slice(-3),l=o&&r[0].slice(-5),u=o&&r[0].slice(-6);return n?o&&t>=1&&t<=4||s>=1&&s<=4||s>=21&&s<=24||s>=41&&s<=44||s>=61&&s<=64||s>=81&&s<=84?"one":t==5||s==5?"many":"other":t==0?"zero":t==1?"one":s==2||s==22||s==42||s==62||s==82||o&&i==0&&(l>=1e3&&l<=2e4||l==4e4||l==6e4||l==8e4)||t!=0&&u==1e5?"two":s==3||s==23||s==43||s==63||s==83?"few":t==1||s!=1&&s!=21&&s!=41&&s!=61&&s!=81?"other":"many"};const Ra=a;const lag=(t,n)=>{const r=String(t).split("."),o=r[0];return n?"other":t==0?"zero":o!=0&&o!=1||t==0?"other":"one"};const Ba=a;const Ia=a;const lij=(t,n)=>{const r=String(t).split("."),o=!r[1],s=Number(r[0])==t;return n?t==11||t==8||s&&t>=80&&t<=89||s&&t>=800&&t<=899?"many":"other":t==1&&o?"one":"other"};const Ca=e;const Ua=b;const lo=(t,n)=>n&&t==1?"one":"other";const lt=(t,n)=>{const r=String(t).split("."),o=r[1]||"",s=Number(r[0])==t,i=s&&r[0].slice(-1),l=s&&r[0].slice(-2);return n?"other":i==1&&(l<11||l>19)?"one":i>=2&&i<=9&&(l<11||l>19)?"few":o!=0?"many":"other"};const lv=(t,n)=>{const r=String(t).split("."),o=r[1]||"",s=o.length,i=Number(r[0])==t,l=i&&r[0].slice(-1),u=i&&r[0].slice(-2),h=o.slice(-2),p=o.slice(-1);return n?"other":i&&l==0||u>=11&&u<=19||s==2&&h>=11&&h<=19?"zero":l==1&&u!=11||s==2&&p==1&&h!=11||s!=2&&p==1?"one":"other"};const Wa=a;const Za=b;const Ja=a;const mk=(t,n)=>{const r=String(t).split("."),o=r[0],s=r[1]||"",i=!r[1],l=o.slice(-1),u=o.slice(-2),h=s.slice(-1),p=s.slice(-2);return n?l==1&&u!=11?"one":l==2&&u!=12?"two":l!=7&&l!=8||u==17||u==18?"other":"many":i&&l==1&&u!=11||h==1&&p!=11?"one":"other"};const La=a;const Ga=a;const mo=(t,n)=>{const r=String(t).split("."),o=!r[1],s=Number(r[0])==t,i=s&&r[0].slice(-2);return n?t==1?"one":"other":t==1&&o?"one":!o||t==0||t!=1&&i>=1&&i<=19?"few":"other"};const mr=(t,n)=>n?t==1?"one":t==2||t==3?"two":t==4?"few":"other":t==1?"one":"other";const ms=(t,n)=>n&&t==1?"one":"other";const mt=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t,s=o&&r[0].slice(-2);return n?"other":t==1?"one":t==2?"two":t==0||s>=3&&s<=10?"few":s>=11&&s<=19?"many":"other"};const Ka=e;const Ha=a;const Va=f;const Ya=a;const Qa=a;const ne=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t;return n?o&&t>=1&&t<=4?"one":"other":t==1?"one":"other"};const Xa=d;const el=a;const nl=a;const rl=a;const ol=e;const il=a;const cl=b;const al=a;const ll=a;const ul=a;const or=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t;return n?t==1||t==5||o&&t>=7&&t<=9?"one":t==2||t==3?"two":t==4?"few":t==6?"many":"other":t==1?"one":"other"};const hl=a;const fl=e;const dl=b;const ml=a;const gl=c;const pl=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=o.slice(-1),l=o.slice(-2);return n?"other":t==1&&s?"one":s&&i>=2&&i<=4&&(l<12||l>14)?"few":s&&o!=1&&(i==0||i==1)||s&&i>=5&&i<=9||s&&l>=12&&l<=14?"many":"other"};const prg=(t,n)=>{const r=String(t).split("."),o=r[1]||"",s=o.length,i=Number(r[0])==t,l=i&&r[0].slice(-1),u=i&&r[0].slice(-2),h=o.slice(-2),p=o.slice(-1);return n?"other":i&&l==0||u>=11&&u<=19||s==2&&h>=11&&h<=19?"zero":l==1&&u!=11||s==2&&p==1&&h!=11||s!=2&&p==1?"one":"other"};const yl=a;const pt=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=o.slice(-6);return n?"other":o==0||o==1?"one":o!=0&&i==0&&s?"many":"other"};const pt_PT=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=o.slice(-6);return n?"other":t==1&&s?"one":o!=0&&i==0&&s?"many":"other"};const wl=a;const ro=(t,n)=>{const r=String(t).split("."),o=!r[1],s=Number(r[0])==t,i=s&&r[0].slice(-2);return n?t==1?"one":"other":t==1&&o?"one":!o||t==0||t!=1&&i>=1&&i<=19?"few":"other"};const bl=a;const ru=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=o.slice(-1),l=o.slice(-2);return n?"other":s&&i==1&&l!=11?"one":s&&i>=2&&i<=4&&(l<12||l>14)?"few":s&&i==0||s&&i>=5&&i<=9||s&&l>=11&&l<=14?"many":"other"};const vl=a;const kl=e;const Sl=a;const xl=f;const sc=(t,n)=>{const r=String(t).split("."),o=!r[1];return n?t==11||t==8||t==80||t==800?"many":"other":t==1&&o?"one":"other"};const scn=(t,n)=>{const r=String(t).split("."),o=!r[1];return n?t==11||t==8||t==80||t==800?"many":"other":t==1&&o?"one":"other"};const El=a;const Nl=a;const Ol=f;const Fl=a;const Pl=e;const _l=e;const sh=(t,n)=>{const r=String(t).split("."),o=r[0],s=r[1]||"",i=!r[1],l=o.slice(-1),u=o.slice(-2),h=s.slice(-1),p=s.slice(-2);return n?"other":i&&l==1&&u!=11||h==1&&p!=11?"one":i&&l>=2&&l<=4&&(u<12||u>14)||h>=2&&h<=4&&(p<12||p>14)?"few":"other"};const shi=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t;return n?"other":t>=0&&t<=1?"one":o&&t>=2&&t<=10?"few":"other"};const si=(t,n)=>{const r=String(t).split("."),o=r[0],s=r[1]||"";return n?"other":t==0||t==1||o==0&&s==1?"one":"other"};const sk=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1];return n?"other":t==1&&s?"one":o>=2&&o<=4&&s?"few":s?"other":"many"};const sl=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=o.slice(-2);return n?"other":s&&i==1?"one":s&&i==2?"two":s&&(i==3||i==4)||!s?"few":"other"};const Tl=f;const jl=f;const $l=f;const Dl=f;const Al=f;const zl=a;const Ml=a;const sq=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t,s=o&&r[0].slice(-1),i=o&&r[0].slice(-2);return n?t==1?"one":s==4&&i!=14?"many":"other":t==1?"one":"other"};const sr=(t,n)=>{const r=String(t).split("."),o=r[0],s=r[1]||"",i=!r[1],l=o.slice(-1),u=o.slice(-2),h=s.slice(-1),p=s.slice(-2);return n?"other":i&&l==1&&u!=11||h==1&&p!=11?"one":i&&l>=2&&l<=4&&(u<12||u>14)||h>=2&&h<=4&&(p<12||p>14)?"few":"other"};const ql=a;const Rl=a;const Bl=a;const Il=e;const sv=(t,n)=>{const r=String(t).split("."),o=!r[1],s=Number(r[0])==t,i=s&&r[0].slice(-1),l=s&&r[0].slice(-2);return n?i!=1&&i!=2||l==11||l==12?"other":"one":t==1&&o?"one":"other"};const Cl=d;const Ul=a;const Wl=a;const Zl=a;const Jl=a;const Ll=e;const Gl=b;const Kl=a;const tk=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t,s=o&&r[0].slice(-1);return n?s==6||s==9||t==10?"few":"other":t==1?"one":"other"};const tl=(t,n)=>{const r=String(t).split("."),o=r[0],s=r[1]||"",i=!r[1],l=o.slice(-1),u=s.slice(-1);return n?t==1?"one":"other":i&&(o==1||o==2||o==3)||i&&l!=4&&l!=6&&l!=9||!i&&u!=4&&u!=6&&u!=9?"one":"other"};const Hl=a;const Vl=e;const Yl=e;const Ql=a;const Xl=a;const tzm=(t,n)=>{const r=String(t).split("."),o=Number(r[0])==t;return n?"other":t==0||t==1||o&&t>=11&&t<=99?"one":"other"};const tu=a;const uk=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=Number(r[0])==t,l=i&&r[0].slice(-1),u=i&&r[0].slice(-2),h=o.slice(-1),p=o.slice(-2);return n?l==3&&u!=13?"few":"other":s&&h==1&&p!=11?"one":s&&h>=2&&h<=4&&(p<12||p>14)?"few":s&&h==0||s&&h>=5&&h<=9||s&&p>=11&&p<=14?"many":"other"};const eu=e;const nu=d;const ou=a;const su=a;const vec=(t,n)=>{const r=String(t).split("."),o=r[0],s=!r[1],i=o.slice(-6);return n?t==11||t==8||t==80||t==800?"many":"other":t==1&&s?"one":o!=0&&i==0&&s?"many":"other"};const vi=(t,n)=>n&&t==1?"one":"other";const iu=a;const cu=a;const au=b;const lu=a;const uu=e;const fu=a;const pu=a;const du=d;const mu=e;const yu=e;const wu=e;const bu=c;var vu=Object.freeze({__proto__:null,af:Fc,ak:Pc,am:_c,an:Tc,ar:ar,ars:ars,as:as,asa:jc,ast:$c,az:az,bal:bal,be:be,bem:Dc,bez:Ac,bg:zc,bho:Mc,bm:qc,bn:bn,bo:Rc,br:br,brx:Bc,bs:bs,ca:ca,ce:Ic,ceb:ceb,cgg:Cc,chr:Uc,ckb:Wc,cs:cs,cy:cy,da:da,de:Zc,doi:Jc,dsb:dsb,dv:Lc,dz:Gc,ee:Kc,el:Hc,en:en,eo:Vc,es:es,et:Yc,eu:Qc,fa:Xc,ff:ff,fi:ta,fil:fil,fo:ea,fr:fr,fur:na,fy:ra,ga:ga,gd:gd,gl:oa,gsw:sa,gu:gu,guw:ia,gv:gv,ha:aa,haw:la,he:he,hi:hi,hnj:ua,hr:hr,hsb:hsb,hu:hu,hy:hy,ia:ha,id:fa,ig:pa,ii:ma,io:ya,is:is,it:it,iu:wa,ja:ba,jbo:va,jgo:Sa,jmc:xa,jv:Ea,jw:Na,ka:ka,kab:kab,kaj:Oa,kcg:Fa,kde:Pa,kea:_a,kk:kk,kkj:Ta,kl:ja,km:$a,kn:Da,ko:Aa,ks:za,ksb:Ma,ksh:ksh,ku:qa,kw:kw,ky:Ra,lag:lag,lb:Ba,lg:Ia,lij:lij,lkt:Ca,ln:Ua,lo:lo,lt:lt,lv:lv,mas:Wa,mg:Za,mgo:Ja,mk:mk,ml:La,mn:Ga,mo:mo,mr:mr,ms:ms,mt:mt,my:Ka,nah:Ha,naq:Va,nb:Ya,nd:Qa,ne:ne,nl:Xa,nn:el,nnh:nl,no:rl,nqo:ol,nr:il,nso:cl,ny:al,nyn:ll,om:ul,or:or,os:hl,osa:fl,pa:dl,pap:ml,pcm:gl,pl:pl,prg:prg,ps:yl,pt:pt,pt_PT:pt_PT,rm:wl,ro:ro,rof:bl,ru:ru,rwk:vl,sah:kl,saq:Sl,sat:xl,sc:sc,scn:scn,sd:El,sdh:Nl,se:Ol,seh:Fl,ses:Pl,sg:_l,sh:sh,shi:shi,si:si,sk:sk,sl:sl,sma:Tl,smi:jl,smj:$l,smn:Dl,sms:Al,sn:zl,so:Ml,sq:sq,sr:sr,ss:ql,ssy:Rl,st:Bl,su:Il,sv:sv,sw:Cl,syr:Ul,ta:Wl,te:Zl,teo:Jl,th:Ll,ti:Gl,tig:Kl,tk:tk,tl:tl,tn:Hl,to:Vl,tpi:Yl,tr:Ql,ts:Xl,tzm:tzm,ug:tu,uk:uk,und:eu,ur:nu,uz:ou,ve:su,vec:vec,vi:vi,vo:iu,vun:cu,wa:au,wae:lu,wo:uu,xh:fu,xog:pu,yi:du,yo:mu,yue:yu,zh:wu,zu:bu});function normalize(t){if(typeof t!=="string"||t.length<2)throw new RangeError("Invalid language tag: ".concat(t));if(t.startsWith("pt-PT"))return"pt-PT";var n=t.match(/.+?(?=[-_])/);return n?n[0]:t}function getPlural(t){if(typeof t==="function"){var n=normalize(t.name);return{isDefault:false,id:identifier(n),lc:n,locale:t.name,getPlural:t,cardinals:t.cardinals||[],ordinals:t.ordinals||[]}}var r=normalize(t);var o=identifier(r);return isPluralId(o)?{isDefault:true,id:o,lc:r,locale:t,getCardinal:Kn[o],getPlural:vu[o],cardinals:Oc[o].cardinal,ordinals:Oc[o].ordinal}:null}function getAllPlurals(t){var n=Object.keys(vu).filter((function(n){return n!==t}));n.unshift(t);return n.map(getPlural)}function hasPlural(t){var n=normalize(t);return identifier(n)in vu}function isPluralId(t){return t in vu}var ku=function(){function MessageFormat(n,r){(this||t).plurals=[];(this||t).options=Object.assign({biDiSupport:false,currency:"USD",customFormatters:{},localeCodeFromKey:null,requireAllArguments:false,returnType:"string",strict:r&&r.strictNumberSign||false,strictPluralKeys:true},r);if(n==="*")(this||t).plurals=getAllPlurals(MessageFormat.defaultLocale);else if(Array.isArray(n))(this||t).plurals=n.map(getPlural).filter(Boolean);else if(n){var o=getPlural(n);o&&((this||t).plurals=[o])}if((this||t).plurals.length===0){o=getPlural(MessageFormat.defaultLocale);(this||t).plurals=[o]}}MessageFormat.escape=function(t,n){var r=n?/[#{}]/g:/[{}]/g;return String(t).replace(r,"'$&'")};MessageFormat.supportedLocalesOf=function(t){var n=Array.isArray(t)?t:[t];return n.filter(hasPlural)};MessageFormat.prototype.resolvedOptions=function(){return __assign(__assign({},(this||t).options),{locale:(this||t).plurals[0].locale,plurals:(this||t).plurals})};MessageFormat.prototype.compile=function(n){var r,o;var s=new $((this||t).options);var i="return "+s.compile(n,(this||t).plurals[0]);var l=[];var u=[];try{for(var h=__values(Object.entries(s.runtime)),p=h.next();!p.done;p=h.next()){var m=__read(p.value,2),g=m[0],y=m[1];l.push(g);u.push(y)}}catch(t){r={error:t}}finally{try{p&&!p.done&&(o=h.return)&&o.call(h)}finally{if(r)throw r.error}}var w=new(Function.bind.apply(Function,__spreadArray(__spreadArray([void 0],__read(l),false),[i],false)));return w.apply(void 0,__spreadArray([],__read(u),false))};MessageFormat.defaultLocale="en";return MessageFormat}();return ku}));var r=n;const o=n.__esModule,s=n.lexer,i=n.states;export{o as __esModule,r as default,s as lexer,i as states};

